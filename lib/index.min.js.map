{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\webpack/bootstrap cefbec4376e4f29b01de","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/SystemChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/index.ts","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/utils/utils.ts","..\\react-bell-chat\\./src/lib/ChatInput/index.tsx"],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE_0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","React","styles_1","ChatBubble","_super","props","_this","state","mouseOverLastSeenContainer","__extends","render","message","_a","lastSeenAvatarStyles","yourAuthorId","styles","userChatBubble","chatBubble","text","userText","recipientText","recipientChatBubble","firstChatBubbleInGroup","userFirstChatBubbleInGroup","recipientFirstChatBubbleInGroup","centerChatBubbleInGroup","userCenterChatBubbleInGroup","recipientCenterChatBubbleInGroup","lastChatBubbleInGroup","userLastChatBubbleInGroup","recipientLastChatBubbleInGroup","userChatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","chatBubbleWrapper","createdOn","userCreatedOn","recipientCreatedOn","isSendIconColor","loadingSpinnerColor","lastSeenByContainer","youAreAuthor","authorId","finalChatBubbleStyles","__assign","default","isFirstInGroup","isCenterInGroup","isLastInGroup","createElement","style","toLocaleTimeString","hour","minute","hour12","undefined","isSend","width","height","xmlns","viewBox","preserveAspectRatio","background","fill","className","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","length","customLastSeenAvatar","onMouseEnter","setState","onMouseLeave","title","map","join","replace","key","author","container","marginTop","Component","position","left","top","lineHeight","fontWeight","color","backgroundColor","borderRadius","textAlign","borderTopRightRadius","pointerEvents","avatarName","split","part","toUpperCase","substr","systemChatBubbleStyles","systemChatBubbleContainer","fontSize","systemChatBubbleText","time","toLocaleString","isTypingStyles","bottom","right","typingAuthors","chatScrollAreaStyles","overflow","padding","ChatScrollArea","ref","scrollContainer","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrollTop","scrolledToBottom","clientHeight","scrolledToLoadThreshold","loadOldMessagesThreshold","maxHeight","minHeight","onScroll","e","onLoadOldMessages","children","transition","display","lastSeenAvatarName","ChatBubble_1","SystemChatBubble_1","Avatar_1","BubbleGroup","renderGroup","messages","bubblesCentered","bubbleStyles","avatarStyles","showRecipientAvatar","customChatBubble","customSystemChatBubble","SystemChatBubble","messageNodes","authors","filter","lastSeenMessageId","id","customAvatar","defaultProps","PureComponent","dateRowStyles","date","toLocaleDateString","weekday","year","month","day","loadingMessagesStyles","marginBottom","containerStyle","spinnerColor","margin","opacity","isVisible","_1","_2","Avatar","_3","IsTyping","_4","_5","LastSeenAvatar","BubbleGroup_1","_6","ChatFeed","_7","ChatInput","_8","_9","DateRow","_10","LoadingMessages","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","whiteSpace","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","bubbleGroupHeader","IsTyping_1","ChatScrollArea_1","LastSeenAvatar_1","utils_1","DateRow_1","LoadingMessages_1","DefaultChatBubbleFunc","DefaultScrollAreaFunc","bind","isLoadingMessages","onMessageSend","scrollApi","shouldComponentUpdate","nextProps","nextState","shallowDiffers","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","b","renderMessages","groups","groupBy","item","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","push","customDateRow","concat","index","messageGroup","renderIsTyping","isTyping","loadingMessagesStyle","chatFeedStyles","chatScrollArea","chatPanel","customScrollArea","chatMessages","showRecipientAvatarChatMessagesStyle","showIsTyping","showIsTypingChatMessagesStyle","showRecipientLastSeenMessageChatMessagesStyle","customLoadingMessages","showLoadingMessages","hasOldMessages","Promise","resolve","then","__awaiter","sent","flexDirection","flexGrow","array","groupingKeyFn","Error","reduce","result","chatInput","flex","inputStyle","border","borderTopWidth","borderTopStyle","borderTopColor","outline","inputStyles","inputPlaceholder","placeholder"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cefbec4376e4f29b01de","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","import * as React from 'react';\r\nimport Message from '../Message';\r\nimport { Author } from '../Author';\r\nimport { LastSeenAvatarProps, LastSeenAvatarStyles } from './../LastSeenAvatar';\r\nimport chatBubbleStyles, { ChatBubbleStyles } from './styles';\r\nexport { ChatBubbleStyles };\r\n\r\nexport interface ChatBubbleProps {\r\n  message: Message;\r\n  author?: Author;\r\n  styles?: ChatBubbleStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n\r\n  bubblesCentered?: boolean;\r\n  yourAuthorId: number;\r\n  isFirstInGroup?: boolean;\r\n  isLastInGroup?: boolean;\r\n  isCenterInGroup?: boolean;\r\n  lastSeenByAuthors?: Author[];\r\n  showRecipientLastSeenMessage?: boolean;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n}\r\n\r\nexport interface ChatBubbleState {\r\n  mouseOverLastSeenContainer: boolean;\r\n}\r\n\r\nexport default class ChatBubble extends React.Component<\r\n  ChatBubbleProps,\r\n  ChatBubbleState\r\n> {\r\n  constructor(props: ChatBubbleProps) {\r\n    super(props);\r\n    this.state = {\r\n      mouseOverLastSeenContainer: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.message) {\r\n      return null;\r\n    }\r\n\r\n    let { lastSeenAvatarStyles, yourAuthorId, styles } = this.props;\r\n\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const {\r\n      userChatBubble,\r\n      chatBubble,\r\n      text,\r\n      userText,\r\n      recipientText,\r\n      recipientChatBubble,\r\n      firstChatBubbleInGroup,\r\n      userFirstChatBubbleInGroup,\r\n      recipientFirstChatBubbleInGroup,\r\n      centerChatBubbleInGroup,\r\n      userCenterChatBubbleInGroup,\r\n      recipientCenterChatBubbleInGroup,\r\n      lastChatBubbleInGroup,\r\n      userLastChatBubbleInGroup,\r\n      recipientLastChatBubbleInGroup,\r\n      userChatBubbleOrientationNormal,\r\n      recipientChatBubbleOrientationNormal,\r\n      chatBubbleWrapper,\r\n      createdOn,\r\n      userCreatedOn,\r\n      recipientCreatedOn,\r\n      isSendIconColor,\r\n      loadingSpinnerColor,\r\n      lastSeenByContainer\r\n    } = styles;\r\n    const youAreAuthor = this.props.message.authorId === yourAuthorId;\r\n\r\n    // message.id 0 is reserved for blue\r\n    const finalChatBubbleStyles: React.CSSProperties = {\r\n      ...chatBubbleStyles.chatBubble,\r\n      ...chatBubble,\r\n      ...(youAreAuthor\r\n        ? chatBubbleStyles.userChatBubble\r\n        : chatBubbleStyles.recipientChatBubble),\r\n      ...(youAreAuthor ? userChatBubble : recipientChatBubble),\r\n      ...(youAreAuthor\r\n        ? chatBubbleStyles.userChatBubbleOrientationNormal\r\n        : chatBubbleStyles.recipientChatBubbleOrientationNormal),\r\n      ...(youAreAuthor\r\n        ? userChatBubbleOrientationNormal\r\n        : recipientChatBubbleOrientationNormal),\r\n      ...(this.props.isFirstInGroup && chatBubbleStyles.firstChatBubbleInGroup),\r\n      ...(this.props.isFirstInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userFirstChatBubbleInGroup\r\n          : chatBubbleStyles.recipientFirstChatBubbleInGroup)),\r\n      ...(this.props.isCenterInGroup &&\r\n        chatBubbleStyles.centerChatBubbleInGroup),\r\n      ...(this.props.isCenterInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userCenterChatBubbleInGroup\r\n          : chatBubbleStyles.recipientCenterChatBubbleInGroup)),\r\n      ...(this.props.isLastInGroup && chatBubbleStyles.lastChatBubbleInGroup),\r\n      ...(this.props.isLastInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userLastChatBubbleInGroup\r\n          : chatBubbleStyles.recipientLastChatBubbleInGroup)),\r\n      ...(this.props.isFirstInGroup && firstChatBubbleInGroup),\r\n      ...(this.props.isFirstInGroup &&\r\n        (youAreAuthor\r\n          ? userFirstChatBubbleInGroup\r\n          : recipientFirstChatBubbleInGroup)),\r\n      ...(this.props.isCenterInGroup && centerChatBubbleInGroup),\r\n      ...(this.props.isCenterInGroup &&\r\n        (youAreAuthor\r\n          ? userCenterChatBubbleInGroup\r\n          : recipientCenterChatBubbleInGroup)),\r\n      ...(this.props.isLastInGroup && lastChatBubbleInGroup),\r\n      ...(this.props.isLastInGroup &&\r\n        (youAreAuthor\r\n          ? userLastChatBubbleInGroup\r\n          : recipientLastChatBubbleInGroup))\r\n    };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...chatBubbleStyles.chatBubbleWrapper,\r\n          ...chatBubbleWrapper\r\n        }}\r\n      >\r\n        <div style={{ ...finalChatBubbleStyles }}>\r\n          <span\r\n            style={{\r\n              ...chatBubbleStyles.text,\r\n              ...text,\r\n              ...(youAreAuthor ? userText : recipientText)\r\n            }}\r\n          >\r\n            {this.props.message.message}\r\n          </span>\r\n          {this.props.message.createdOn && (\r\n            <span\r\n              style={{\r\n                ...chatBubbleStyles.createdOn,\r\n                ...createdOn,\r\n                ...(youAreAuthor\r\n                  ? chatBubbleStyles.userCreatedOn\r\n                  : chatBubbleStyles.recipientCreatedOn),\r\n                ...(youAreAuthor ? userCreatedOn : recipientCreatedOn)\r\n              }}\r\n              /*title={this.props.message.createdOn.toLocaleString()}*/\r\n            >\r\n              {this.props.message.createdOn.toLocaleTimeString([], {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n                hour12: true\r\n              })}\r\n            </span>\r\n          )}\r\n          {this.props.message.isSend !== undefined && youAreAuthor && (\r\n            <span\r\n              style={{\r\n                ...chatBubbleStyles.isSend\r\n              }}\r\n              /*title={this.props.message.isSend ? 'Send' : 'Sending'}*/\r\n            >\r\n              {this.props.message.isSend ? (\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path\r\n                    fill={\r\n                      isSendIconColor\r\n                        ? isSendIconColor\r\n                        : chatBubbleStyles.isSendIconColor\r\n                    }\r\n                    {\r\n                      /* tslint:disable-next-line:max-line-length*/ ...{}}\r\n                    d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 100 100\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  className=\"lds-eclipse\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path\r\n                    stroke=\"none\"\r\n                    d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\"\r\n                    fill={\r\n                      loadingSpinnerColor\r\n                        ? loadingSpinnerColor\r\n                        : chatBubbleStyles.loadingSpinnerColor\r\n                    }\r\n                    transform=\"rotate(78 50 52.5)\"\r\n                  >\r\n                    <animateTransform\r\n                      attributeName=\"transform\"\r\n                      type=\"rotate\"\r\n                      calcMode=\"linear\"\r\n                      values=\"0 50 52.5;360 50 52.5\"\r\n                      keyTimes=\"0;1\"\r\n                      dur=\"1s\"\r\n                      begin=\"0s\"\r\n                      repeatCount=\"indefinite\"\r\n                    />\r\n                  </path>\r\n                </svg>\r\n              )}\r\n            </span>\r\n          )}\r\n        </div>\r\n        {this.props.showRecipientLastSeenMessage &&\r\n          this.props.lastSeenByAuthors &&\r\n          this.props.lastSeenByAuthors.length > 0 &&\r\n          this.props.customLastSeenAvatar && (\r\n            <div\r\n              className=\"react-bell-chat__chat-bubble__last-seen-by__container\"\r\n              style={{\r\n                ...chatBubbleStyles.lastSeenByContainer,\r\n                ...lastSeenByContainer\r\n              }}\r\n              onMouseEnter={() =>\r\n                this.setState({ mouseOverLastSeenContainer: true })\r\n              }\r\n              onMouseLeave={() =>\r\n                this.setState({ mouseOverLastSeenContainer: false })\r\n              }\r\n              title={\r\n                'Last seen by ' +\r\n                this.props.lastSeenByAuthors\r\n                  .map(a => a.name)\r\n                  .join(', ')\r\n                  .replace(/,(?!.*,)/gim, ' and')\r\n              }\r\n            >\r\n              {this.props.lastSeenByAuthors.map((a, i) => (\r\n                <this.props.customLastSeenAvatar\r\n                  key={i}\r\n                  author={a}\r\n                  styles={{\r\n                    ...lastSeenAvatarStyles,\r\n                    container: {\r\n                      ...(lastSeenAvatarStyles\r\n                        ? (lastSeenAvatarStyles.container)\r\n                        : {}),\r\n                      ...(i > 0 && !this.state.mouseOverLastSeenContainer\r\n                        ? { marginTop: -12 }\r\n                        : { marginTop: -4 })\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nexport interface AvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nexport interface AvatarProps {\r\n  author: Author;\r\n  styles?: AvatarStyles;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    left: -50,\r\n    top: 0,\r\n    width: 40,\r\n    height: 40,\r\n    lineHeight: '40px',\r\n    fontWeight: 400,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    borderTopRightRadius: 5\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst Avatar: React.SFC<AvatarProps> = props =>\r\n  props.author && (\r\n    <div\r\n      style={{\r\n        ...styles.container,\r\n        ...(props.styles && props.styles.container)\r\n      }}\r\n      title={props.author.name}\r\n      className=\"react-bell-chat__avatar\"\r\n    >\r\n      <span style={{ ...styles.text, ...(props.styles && props.styles.text) }}>\r\n        {props.author.avatarName\r\n          ? props.author.avatarName\r\n          : props.author.name\r\n              .split(' ')\r\n              .map(part => part[0])\r\n              .join('')\r\n              .toUpperCase()\r\n              .substr(0, 3)}\r\n      </span>\r\n    </div>\r\n  );\r\n\r\nexport default Avatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/Avatar/index.tsx","import * as React from 'react';\r\nimport { ChatBubbleProps } from '../ChatBubble';\r\nimport { ChatBubbleStyles } from '../ChatBubble/styles';\r\n\r\nconst systemChatBubbleStyles: ChatBubbleStyles = {\r\n  systemChatBubbleContainer: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)'\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport interface SystemChatBubbleProps extends ChatBubbleProps {\r\n}\r\n\r\nconst SystemChatBubble = (props: SystemChatBubbleProps) => {\r\n  let {\r\n    styles\r\n  } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  const {\r\n    systemChatBubbleContainer,\r\n    systemChatBubbleText\r\n  } = styles;\r\n  const time = props.message.createdOn && props.message.createdOn.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true });\r\n  return props.message && (\r\n    <div\r\n      className=\"react-bell-chat__chat-bubble react-bell-chat__chat-bubble--system\"\r\n      style={{\r\n        ...systemChatBubbleStyles.systemChatBubbleContainer,\r\n        ...systemChatBubbleContainer\r\n      }}\r\n    >\r\n      {time && (\r\n        <span\r\n          className=\"react-bell-chat__chat-bubble--system__created-on\"\r\n          title={props.message.createdOn.toLocaleString()}\r\n          style={{\r\n            ...systemChatBubbleStyles.systemChatBubbleText,\r\n            ...systemChatBubbleText\r\n          }}\r\n        >\r\n          {time}:{' '}\r\n        </span>\r\n      )}\r\n      {props.message.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemChatBubble;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/SystemChatBubble/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nconst isTypingStyles: IsTypingStyles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    left: 0,\r\n    right: 0,\r\n    color: 'rgb(204, 204, 204)',\r\n    textAlign: 'center'\r\n  } as React.CSSProperties\r\n};\r\n\r\nexport interface IsTypingStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nexport interface IsTypingProps {\r\n  typingAuthors: Author[];\r\n  styles?: IsTypingStyles;\r\n}\r\n\r\nconst IsTyping = (props: IsTypingProps) => {\r\n  let { styles } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  const { container } = styles;\r\n\r\n  return (\r\n    props.typingAuthors &&\r\n    props.typingAuthors.length > 0 && (\r\n      <div\r\n        className=\"react-bell-chat__is-typing__container\"\r\n        style={{ ...isTypingStyles.container, ...container }}\r\n      >\r\n        {props.typingAuthors\r\n          .map(a => a.name)\r\n          .join(', ')\r\n          .replace(/,(?!.*,)/gim, ' and') +\r\n          (props.typingAuthors.length === 1 ? ' is ' : ' are ') +\r\n          'typing'}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default IsTyping;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/IsTyping/index.tsx","import * as React from 'react';\r\n\r\nexport interface ChatScrollAreaStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst chatScrollAreaStyles: ChatScrollAreaStyles = {\r\n  container: {\r\n    overflow: 'auto',\r\n    padding: '0 10px',\r\n    // flexDirection: 'column-reverse'\r\n  }\r\n};\r\n\r\nexport interface ChatScrollAreaProps {\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n  children?: JSX.Element | JSX.Element[];\r\n  styles?: ChatScrollAreaStyles;\r\n  apiRef?: (api: ChatScrollAreaApi) => void;\r\n  loadOldMessagesThreshold: number;\r\n  onLoadOldMessages: () => Promise<void>;\r\n}\r\n\r\nexport interface ChatScrollAreaApi {\r\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\r\n  scrollTo: (top: number) => void;\r\n  scrollTop: () => number;\r\n  scrollHeight: () => number;\r\n  clientHeight: () => number;\r\n  scrolledToBottom: () => boolean;\r\n  scrolledToLoadThreshold: () => boolean; // Check if we are scrolled to threshold where we need to load messages\r\n}\r\n\r\nexport class ChatScrollArea extends React.Component<ChatScrollAreaProps> {\r\n  scrollContainer: HTMLDivElement;\r\n  constructor(props: ChatScrollAreaProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const { container } = styles;\r\n    return (\r\n      <div\r\n        ref={scrollContainer => {\r\n          this.scrollContainer = scrollContainer;\r\n          this.props.apiRef && this.props.apiRef({\r\n            scrollToBottom: (behavior = 'auto') => scrollContainer && (scrollContainer.scrollTo ?\r\n              scrollContainer.scrollTo({\r\n                top: scrollContainer.scrollHeight,\r\n                behavior\r\n              }) :\r\n              scrollContainer.scrollTop = scrollContainer.scrollHeight),\r\n            scrollTo: top => scrollContainer && (scrollContainer.scrollTo ?\r\n              scrollContainer.scrollTo({\r\n                top: top\r\n              })\r\n              :\r\n              scrollContainer.scrollTop = top),\r\n            scrolledToBottom: () => this.scrollContainer.clientHeight + this.scrollContainer.scrollTop === this.scrollContainer.scrollHeight,\r\n            scrolledToLoadThreshold: () => this.scrollContainer && this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold,\r\n            scrollTop: () => this.scrollContainer && this.scrollContainer.scrollTop,\r\n            scrollHeight: () => this.scrollContainer && this.scrollContainer.scrollHeight,\r\n            clientHeight: () => this.scrollContainer && this.scrollContainer.clientHeight,\r\n          });\r\n        }}\r\n        className=\"react-bell-chat__chat-history\"\r\n        style={{\r\n          ...chatScrollAreaStyles.container,\r\n          ...(this.props.maxHeight !== undefined ? { maxHeight: this.props.maxHeight } : {}),\r\n          ...(this.props.minHeight !== undefined ? { minHeight: this.props.minHeight } : {}),\r\n          ...container\r\n        }}\r\n        onScroll={e => (this.scrollContainer && this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold) && this.props.onLoadOldMessages()}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatScrollArea;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatScrollArea/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nexport interface LastSeenAvatarProps {\r\n  author: Author;\r\n  styles: LastSeenAvatarStyles;\r\n}\r\n\r\nexport interface LastSeenAvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst lastSeenAvatarStyles = {\r\n  container: {\r\n    width: 20,\r\n    height: 20,\r\n    lineHeight: '20px',\r\n    fontWeight: 400,\r\n    fontSize: 10,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    transition: '0.3s all ease-in-out',\r\n    display: 'block',\r\n    position: 'relative'\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst LastSeenAvatar: React.SFC<LastSeenAvatarProps> = props => {\r\n  let { styles } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  const { container, text } = styles;\r\n  return (\r\n    props.author && (\r\n      <div\r\n        style={{\r\n          ...lastSeenAvatarStyles.container,\r\n          ...container\r\n        }}\r\n        className=\"react-bell-chat__last-seen-avatar\"\r\n      >\r\n        <span style={{ ...lastSeenAvatarStyles.text, ...text }}>\r\n          {props.author.lastSeenAvatarName\r\n            ? props.author.lastSeenAvatarName\r\n            : props.author.name[0].toUpperCase()}\r\n        </span>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LastSeenAvatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LastSeenAvatar/index.tsx","import * as React from 'react';\r\nimport DefaultChatBubble, {\r\n  ChatBubbleProps,\r\n  ChatBubbleStyles\r\n} from '../ChatBubble';\r\nimport DefaultSystemChatBubble from '../SystemChatBubble';\r\nimport bubbleGroupStyles, { BubbleGroupStyles } from './styles';\r\nimport { Message } from '../';\r\nimport { Author } from '../Author';\r\nimport Avatar, { AvatarProps } from '../Avatar';\r\nimport { LastSeenAvatarProps, LastSeenAvatarStyles } from '../LastSeenAvatar';\r\nimport { AvatarStyles } from './../Avatar/index';\r\n\r\nexport interface BubbleGroupProps {\r\n  yourAuthorId?: number;\r\n  messages: Message[];\r\n  author: Author;\r\n  authors?: Author[];\r\n  showRecipientAvatar?: boolean;\r\n  bubblesCentered?: boolean;\r\n\r\n  styles?: BubbleGroupStyles;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  avatarStyles?: AvatarStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customSystemChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  showRecipientLastSeenMessage?: boolean;\r\n}\r\n\r\nexport default class BubbleGroup extends React.PureComponent<BubbleGroupProps> {\r\n  public static defaultProps: BubbleGroupProps = {\r\n    messages: [],\r\n    author: undefined,\r\n    customAvatar: Avatar,\r\n    showRecipientLastSeenMessage: false\r\n  };\r\n\r\n  constructor(props: BubbleGroupProps) {\r\n    super(props);\r\n  }\r\n\r\n  renderGroup(messages: Message[], author: Author) {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const {\r\n      chatBubbleWrapper,\r\n    } = styles;\r\n    const {\r\n      bubblesCentered,\r\n\r\n      bubbleStyles,\r\n      lastSeenAvatarStyles,\r\n      avatarStyles,\r\n\r\n      showRecipientAvatar,\r\n      customChatBubble,\r\n      customSystemChatBubble,\r\n      showRecipientLastSeenMessage,\r\n      customLastSeenAvatar\r\n    } = this.props;\r\n    const ChatBubble = customChatBubble || DefaultChatBubble;\r\n    const SystemChatBubble = customSystemChatBubble || DefaultSystemChatBubble;\r\n\r\n    const messageNodes = messages.map((message, i) => {\r\n      const props: ChatBubbleProps = {\r\n        yourAuthorId: this.props.yourAuthorId,\r\n        lastSeenAvatarStyles,\r\n        author,\r\n        message,\r\n        bubblesCentered,\r\n        styles: bubbleStyles,\r\n        isFirstInGroup: i === 0,\r\n        isLastInGroup: i === messages.length - 1 && messages.length > 1,\r\n        isCenterInGroup: i < messages.length - 1 && messages.length > 1,\r\n        lastSeenByAuthors: this.props.authors && this.props.authors.filter(a => a.lastSeenMessageId !== undefined && a.lastSeenMessageId === message.id),\r\n        showRecipientLastSeenMessage,\r\n        customLastSeenAvatar\r\n      };\r\n      return message.authorId !== undefined ?\r\n        (\r\n          <ChatBubble\r\n            key={i}\r\n            {...props}\r\n          />\r\n        )\r\n        :\r\n        (\r\n          <SystemChatBubble\r\n            key={i}\r\n            {...props}\r\n          />\r\n        );\r\n    });\r\n\r\n    const youAreAuthor = author && this.props.yourAuthorId === author.id;\r\n\r\n    return (\r\n      <div style={{...bubbleGroupStyles.chatBubbleWrapper, ...chatBubbleWrapper}}>\r\n        {!youAreAuthor && showRecipientAvatar && author && this.props.customAvatar && (\r\n          <this.props.customAvatar\r\n            author={this.props.author}\r\n            styles={avatarStyles}\r\n          />\r\n        )}\r\n        {messageNodes}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { messages, author } = this.props;\r\n    return this.renderGroup(messages, author);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/index.tsx","import * as React from 'react';\r\n\r\nexport interface DateRowStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nconst dateRowStyles: DateRowStyles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)'\r\n  },\r\n};\r\n\r\nexport interface DateRowProps {\r\n  date: Date;\r\n  styles?: DateRowStyles;\r\n}\r\n\r\nconst DateRow = (props: DateRowProps) => {\r\n  let { styles } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  const {\r\n    container\r\n  } = styles;\r\n  return props.date && (\r\n    <div\r\n      className=\"react-bell-chat__date-row\"\r\n      style={{\r\n        ...dateRowStyles.container,\r\n        ...container\r\n      }}\r\n      title={props.date.toLocaleDateString([], { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\r\n    >\r\n      {props.date.toLocaleDateString()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/DateRow/index.tsx","import * as React from 'react';\r\n\r\nconst loadingMessagesStyles: LoadingMessagesStyle = {\r\n  containerStyle: {\r\n    display: 'flex',\r\n    marginBottom: 10\r\n  },\r\n  spinnerColor: 'rgb(0, 132, 255)'\r\n};\r\n\r\nexport interface LoadingMessagesStyle {\r\n  containerStyle?: React.CSSProperties;\r\n  spinnerColor?: string;\r\n}\r\n\r\nexport interface LoadingMessagesProps {\r\n  styles?: LoadingMessagesStyle;\r\n  isVisible: boolean;\r\n}\r\n\r\nconst LoadingMessages: React.SFC<LoadingMessagesProps> = props => {\r\n  let { styles } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  const {\r\n    containerStyle,\r\n    spinnerColor\r\n  } = styles;\r\n  return (\r\n    <div className=\"react-bell-chat__loading-messages\" style={{ ...loadingMessagesStyles.containerStyle, ...containerStyle }}>\r\n      <svg\r\n        width=\"40px\"\r\n        height=\"40px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 100 100\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n        style={{ \r\n          background: 'none',\r\n          margin: 'auto', \r\n          fill: spinnerColor ? spinnerColor : loadingMessagesStyles.spinnerColor,\r\n          opacity: props.isVisible ? 1 : 0,\r\n          transition: '0.3s all ease-in-out'\r\n        }}\r\n      >\r\n        <title>Loading messages</title>\r\n        <path\r\n          stroke=\"none\"\r\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\r\n          transform=\"rotate(42 50 53)\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            calcMode=\"linear\"\r\n            values=\"0 50 53;360 50 53\"\r\n            keyTimes=\"0;1\"\r\n            dur=\"1s\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMessages;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LoadingMessages/index.tsx","import ChatBubble, { ChatBubbleProps } from './ChatBubble/';\r\nimport Avatar, { AvatarProps } from './Avatar/';\r\nimport IsTyping, { IsTypingProps } from './IsTyping/';\r\nimport ChatScrollArea, { ChatScrollAreaProps, ChatScrollAreaApi } from './ChatScrollArea/';\r\nimport LastSeenAvatar, { LastSeenAvatarProps } from './LastSeenAvatar/';\r\nimport BubbleGroup, { BubbleGroupProps } from './BubbleGroup';\r\nimport ChatFeed, { ChatFeedProps, ChatFeedApi } from './ChatFeed/';\r\nimport ChatInput, { ChatInputProps } from './ChatInput/';\r\nimport SystemChatBubble from './SystemChatBubble/';\r\nimport DateRow, { DateRowProps } from './DateRow/';\r\nimport LoadingMessages, { LoadingMessagesProps } from './LoadingMessages/';\r\nimport Message from './Message/';\r\nimport Author from './Author/';\r\n\r\nexport {\r\n  ChatFeed,\r\n  ChatFeedProps,\r\n  ChatFeedApi,\r\n  ChatInput,\r\n  ChatInputProps,\r\n  LoadingMessages,\r\n  LoadingMessagesProps,\r\n  DateRow,\r\n  DateRowProps,\r\n  ChatBubble,\r\n  ChatBubbleProps,\r\n  SystemChatBubble,\r\n  BubbleGroup,\r\n  BubbleGroupProps,\r\n  Message,\r\n  Author,\r\n  Avatar,\r\n  AvatarProps,\r\n  LastSeenAvatar,\r\n  LastSeenAvatarProps,\r\n  IsTyping,\r\n  IsTypingProps,\r\n  ChatScrollArea,\r\n  ChatScrollAreaProps,\r\n  ChatScrollAreaApi\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.ts","import * as React from 'react';\r\n\r\nexport interface ChatBubbleStyles {\r\n  chatBubbleWrapper?: React.CSSProperties;\r\n  chatBubble?: React.CSSProperties;\r\n  systemChatBubbleContainer?: React.CSSProperties;\r\n  systemChatBubbleText?: React.CSSProperties;\r\n  userChatBubbleOrientationNormal?: React.CSSProperties;\r\n  recipientChatBubbleOrientationNormal?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n  userText?: React.CSSProperties;\r\n  recipientText?: React.CSSProperties;\r\n  userChatBubble?: React.CSSProperties;\r\n  recipientChatBubble?: React.CSSProperties;\r\n  firstChatBubbleInGroup?: React.CSSProperties;\r\n  userFirstChatBubbleInGroup?: React.CSSProperties;\r\n  recipientFirstChatBubbleInGroup?: React.CSSProperties;\r\n  lastChatBubbleInGroup?: React.CSSProperties;\r\n  userLastChatBubbleInGroup?: React.CSSProperties;\r\n  recipientLastChatBubbleInGroup?: React.CSSProperties;\r\n  centerChatBubbleInGroup?: React.CSSProperties;\r\n  userCenterChatBubbleInGroup?: React.CSSProperties;\r\n  recipientCenterChatBubbleInGroup?: React.CSSProperties;\r\n  createdOn?: React.CSSProperties;\r\n  recipientCreatedOn?: React.CSSProperties;\r\n  userCreatedOn?: React.CSSProperties;\r\n  isSend?: React.CSSProperties;\r\n\r\n  lastSeenByContainer?: React.CSSProperties;\r\n  loadingSpinnerColor?: string;\r\n  isSendIconColor?: string;\r\n}\r\n\r\nconst styles: ChatBubbleStyles = {\r\n  chatBubbleWrapper: {\r\n    position: 'relative',\r\n    marginBottom: 2,\r\n    display: 'flex'\r\n  } as React.CSSProperties,\r\n  chatBubble: {\r\n    position: 'relative',\r\n    backgroundColor: '#0084FF',\r\n    borderRadius: 7,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    maxWidth: '80%',\r\n    paddingTop: 8,\r\n    paddingBottom: 10,\r\n    paddingLeft: 14,\r\n    paddingRight: 14\r\n    // boxShadow: 'rgba(0, 0, 0, 0.3) 2px 2px 2px'\r\n  } as React.CSSProperties,\r\n  userChatBubbleOrientationNormal: {\r\n    marginRight: 0\r\n  } as React.CSSProperties,\r\n  recipientChatBubbleOrientationNormal: {\r\n    marginLeft: 0\r\n  } as React.CSSProperties,\r\n  recipientChatBubble: {\r\n    backgroundColor: '#ccc'\r\n  } as React.CSSProperties,\r\n  text: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 300,\r\n    margin: 0,\r\n    marginRight: 30,\r\n    whiteSpace: 'pre'\r\n  } as React.CSSProperties,\r\n  userFirstChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientFirstChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  userLastChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientLastChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  userCenterChatBubbleInGroup: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientCenterChatBubbleInGroup: {\r\n    borderBottomLeftRadius: 0,\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  createdOn: {\r\n    position: 'absolute',\r\n    right: 14,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n    color: 'rgba(255, 255, 255, 0.55)'\r\n  } as React.CSSProperties,\r\n  isSend: {\r\n    position: 'absolute',\r\n    right: 2,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n  } as React.CSSProperties,\r\n  lastSeenByContainer: {\r\n    position: 'absolute',\r\n    right: -30,\r\n    top: 0,\r\n    width: 20,\r\n    height: '100%',\r\n  } as React.CSSProperties,\r\n  loadingSpinnerColor: 'rgba(255, 255, 255, 0.55)',\r\n  isSendIconColor: '#cddc39',\r\n};\r\nexport default styles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/styles.ts","import * as React from 'react';\r\n\r\nexport interface BubbleGroupStyles {\r\n  chatBubbleWrapper?: React.CSSProperties;\r\n  bubbleGroupHeader?: React.CSSProperties;\r\n}\r\n\r\nexport default {\r\n  chatBubbleWrapper: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    position: 'relative'\r\n  },\r\n  bubbleGroupHeader: {\r\n    margin: 0,\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n    color: '#999'\r\n  }\r\n} as BubbleGroupStyles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/styles.ts","// Copyright 2017 Brandon Mowat\r\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\r\n// other developers make chat interfaces.\r\n\r\nimport * as React from 'react';\r\nimport BubbleGroup from '../BubbleGroup';\r\nimport DefaultChatBubble, { ChatBubbleProps } from '../ChatBubble';\r\nimport Message from '../Message';\r\nimport chatStyles, { ChatFeedStyles } from './styles';\r\nimport { Author } from '../Author';\r\nimport { ChatBubbleStyles } from '../ChatBubble/';\r\nimport Avatar, { AvatarProps, AvatarStyles } from '../Avatar';\r\nimport IsTyping, { IsTypingStyles } from '../IsTyping';\r\nimport ChatScrollArea, {\r\n  ChatScrollAreaProps,\r\n  ChatScrollAreaApi,\r\n  ChatScrollAreaStyles\r\n} from '../ChatScrollArea';\r\nimport LastSeenAvatar, {\r\n  LastSeenAvatarProps,\r\n  LastSeenAvatarStyles\r\n} from '../LastSeenAvatar';\r\nimport { groupBy } from '../utils/utils';\r\nimport DateRow, { DateRowProps, DateRowStyles } from '../DateRow';\r\nimport LoadingMessages, {\r\n  LoadingMessagesProps,\r\n  LoadingMessagesStyle\r\n} from '../LoadingMessages';\r\nimport SystemChatBubble from '../SystemChatBubble';\r\n\r\n// Model for ChatFeed props.\r\n\r\nexport interface ChatStyles {\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  chatScrollArea?: ChatScrollAreaStyles;\r\n  avatarStyles?: AvatarStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n  dateRowStyles?: DateRowStyles;\r\n  loadingMessagesStyle?: LoadingMessagesStyle;\r\n  isTypingStyles?: IsTypingStyles;\r\n  chatFeedStyles?: ChatFeedStyles;\r\n}\r\n\r\nexport interface ChatFeedProps {\r\n  // Structural props\r\n  className?: string;\r\n\r\n  // Functional props\r\n  messages: Message[];\r\n  authors: Author[];\r\n  yourAuthorId: number;\r\n  hasOldMessages?: boolean;\r\n  loadOldMessagesThreshold?: number;\r\n\r\n  // Visual props\r\n  bubblesCentered?: boolean;\r\n  styles?: ChatStyles;\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n\r\n  // Switches\r\n  showDateRow?: boolean;\r\n  showRecipientAvatar?: boolean;\r\n  showRecipientLastSeenMessage?: boolean;\r\n  showIsTyping?: boolean;\r\n  showLoadingMessages?: boolean;\r\n\r\n  // Extra container styles for custom components\r\n  showRecipientAvatarChatMessagesStyle?: React.CSSProperties;\r\n  showRecipientLastSeenMessageChatMessagesStyle?: React.CSSProperties;\r\n  showIsTypingChatMessagesStyle?: React.CSSProperties;\r\n\r\n  // Custom components\r\n  customLoadingMessages?: (props: LoadingMessagesProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customSystemChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customScrollArea?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customIsTyping?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customDateRow?: (props: DateRowProps) => JSX.Element;\r\n\r\n  // Callbacks\r\n  onLoadOldMessages?: () => Promise<void>;\r\n\r\n}\r\n\r\nexport interface ChatFeedState {\r\n  isLoadingMessages: boolean;\r\n}\r\n\r\nexport interface ChatFeedApi {\r\n  onMessageSend: () => void;\r\n  scrollApi: ChatScrollAreaApi;\r\n}\r\n\r\nconst DefaultChatBubbleFunc = props => <DefaultChatBubble {...props} />;\r\nconst DefaultScrollAreaFunc = props => <ChatScrollArea {...props} />;\r\n\r\nexport interface ChatFeedSnapshot {\r\n  wasScrolledToBottom: boolean;\r\n  scrollHeight: number;\r\n  clientHeight: number;\r\n}\r\n\r\n// React component to render a complete chat feed\r\nexport default class ChatFeed\r\n  extends React.Component<ChatFeedProps, ChatFeedState>\r\n  implements ChatFeedApi {\r\n  public static defaultProps: ChatFeedProps = {\r\n    messages: [],\r\n    authors: [],\r\n    customChatBubble: DefaultChatBubbleFunc,\r\n    customAvatar: Avatar,\r\n    customScrollArea: DefaultScrollAreaFunc,\r\n    customLastSeenAvatar: LastSeenAvatar,\r\n    customDateRow: DateRow,\r\n    customLoadingMessages: LoadingMessages,\r\n    yourAuthorId: 0,\r\n    loadOldMessagesThreshold: 50,\r\n    customSystemChatBubble: SystemChatBubble\r\n  };\r\n\r\n  public scrollApi: ChatScrollAreaApi;\r\n\r\n  constructor(props: ChatFeedProps) {\r\n    super(props);\r\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\r\n    this.state = {\r\n      isLoadingMessages: false\r\n    };\r\n  }\r\n\r\n  public onMessageSend() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ChatFeedProps, nextState: ChatFeedState) {\r\n    return (\r\n      this.shallowDiffers(this.props, nextProps) ||\r\n      this.shallowDiffers(this.state, nextState)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps: ChatFeedProps, prevState: ChatFeedState) {\r\n    const wasScrolledToBottom =\r\n      this.scrollApi && this.scrollApi.scrolledToBottom();\r\n    const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\r\n    const clientHeight = this.scrollApi && this.scrollApi.clientHeight();\r\n\r\n    return {\r\n      wasScrolledToBottom,\r\n      scrollHeight,\r\n      clientHeight\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(\r\n    prevProps: ChatFeedProps,\r\n    prevState: ChatFeedState,\r\n    snapshot: ChatFeedSnapshot\r\n  ) {\r\n    if (\r\n      this.props.messages.length !== prevProps.messages.length &&\r\n      snapshot &&\r\n      snapshot.wasScrolledToBottom\r\n    ) {\r\n      this.scrollApi.scrollToBottom();\r\n    } else if (\r\n      this.props.messages.length !== prevProps.messages.length &&\r\n      snapshot &&\r\n      prevState.isLoadingMessages\r\n    ) {\r\n      const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\r\n      this.scrollApi.scrollTo(scrollHeight - snapshot.scrollHeight);\r\n    }\r\n  }\r\n\r\n  shallowDiffers(a: object, b: object) {\r\n    for (let i in a) {\r\n      if (!(i in b)) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in b) {\r\n      if (a[i] !== b[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determines what type of message/messages to render.\r\n   */\r\n  renderMessages(messages: Message[]) {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const {\r\n      bubbleStyles,\r\n      dateRowStyles,\r\n      avatarStyles,\r\n      lastSeenAvatarStyles\r\n    } = styles;\r\n    const { customChatBubble, showRecipientAvatar } = this.props;\r\n\r\n    // First group by days\r\n    const groups = groupBy(\r\n      messages,\r\n      item => item.createdOn && item.createdOn.toDateString()\r\n    );\r\n    let messageNodes: JSX.Element[] = [];\r\n    let jsxKey = 0;\r\n    Object.keys(groups).forEach(key => {\r\n      let group = [];\r\n      const messagesGroup = groups[key];\r\n      if (\r\n        messagesGroup[0] &&\r\n        messagesGroup[0].createdOn &&\r\n        this.props.showDateRow\r\n      ) {\r\n        messageNodes.push(\r\n          <this.props.customDateRow\r\n            key={key}\r\n            date={messagesGroup[0].createdOn}\r\n            styles={dateRowStyles}\r\n          />\r\n        );\r\n      }\r\n      messageNodes = messageNodes.concat(\r\n        messagesGroup.map((message, index) => {\r\n          group.push(message);\r\n          // Find diff in message type or no more messages\r\n          if (\r\n            !messagesGroup[index + 1] ||\r\n            messagesGroup[index + 1].authorId !== message.authorId\r\n          ) {\r\n            const messageGroup = group;\r\n            const author =\r\n              this.props.authors &&\r\n              this.props.authors.filter(a => a.id === message.authorId)[0];\r\n            group = [];\r\n            jsxKey++;\r\n            return (\r\n              <BubbleGroup\r\n                key={jsxKey}\r\n                yourAuthorId={this.props.yourAuthorId}\r\n                messages={messageGroup}\r\n                author={author}\r\n                authors={this.props.authors}\r\n                showRecipientAvatar={showRecipientAvatar}\r\n                customChatBubble={customChatBubble}\r\n                bubbleStyles={bubbleStyles}\r\n                avatarStyles={avatarStyles}\r\n                lastSeenAvatarStyles={lastSeenAvatarStyles}\r\n                showRecipientLastSeenMessage={\r\n                  this.props.showRecipientLastSeenMessage\r\n                }\r\n                customAvatar={this.props.customAvatar}\r\n                customLastSeenAvatar={this.props.customLastSeenAvatar}\r\n                customSystemChatBubble={this.props.customSystemChatBubble}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n    });\r\n    return messageNodes;\r\n  }\r\n\r\n  renderIsTyping() {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const { isTypingStyles } = styles;\r\n    const typingAuthors =\r\n      this.props.authors &&\r\n      this.props.authors.filter(\r\n        a => a.isTyping && a.id !== this.props.yourAuthorId\r\n      );\r\n    if (!typingAuthors || typingAuthors.length === 0) {\r\n      return null;\r\n    }\r\n    return <IsTyping typingAuthors={typingAuthors} styles={isTypingStyles} />;\r\n  }\r\n\r\n  /**\r\n   * render : renders our chat feed\r\n   */\r\n  render() {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const { loadingMessagesStyle, chatFeedStyles, chatScrollArea } = styles;\r\n    return (\r\n      <div\r\n        id={\r\n          'react-bell-chat__chat-panel ' +\r\n          (this.props.className ? this.props.className : '')\r\n        }\r\n        style={{\r\n          ...chatStyles.chatPanel,\r\n          ...(chatFeedStyles && chatFeedStyles.chatPanel)\r\n        }}\r\n      >\r\n        <this.props.customScrollArea\r\n          minHeight={this.props.minHeight}\r\n          maxHeight={this.props.maxHeight}\r\n          apiRef={e => (this.scrollApi = e)}\r\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\r\n          onLoadOldMessages={this.onLoadOldMessages}\r\n          styles={chatScrollArea}\r\n        >\r\n          <div\r\n            style={{\r\n              ...chatStyles.chatMessages,\r\n              ...(this.props.showRecipientAvatar &&\r\n                chatStyles.showRecipientAvatarChatMessagesStyle),\r\n              ...(this.props.showRecipientAvatar &&\r\n                this.props.showRecipientAvatarChatMessagesStyle),\r\n              ...(this.props.showIsTyping &&\r\n                chatStyles.showIsTypingChatMessagesStyle),\r\n              ...(this.props.showIsTyping &&\r\n                this.props.showIsTypingChatMessagesStyle),\r\n              ...(this.props.showRecipientLastSeenMessage &&\r\n                chatStyles.showRecipientLastSeenMessageChatMessagesStyle),\r\n              ...(this.props.showRecipientLastSeenMessage &&\r\n                this.props.showRecipientLastSeenMessageChatMessagesStyle)\r\n            }}\r\n            className=\"react-bell-chat__chat-messages\"\r\n          >\r\n            {\r\n              <this.props.customLoadingMessages\r\n                isVisible={\r\n                  this.props.showLoadingMessages || this.state.isLoadingMessages\r\n                }\r\n                styles={loadingMessagesStyle}\r\n              />\r\n            }\r\n            {this.renderMessages(this.props.messages)}\r\n            {this.props.showIsTyping && this.renderIsTyping()}\r\n          </div>\r\n        </this.props.customScrollArea>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onLoadOldMessages() {\r\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\r\n      return new Promise<void>(resolve => {\r\n        this.setState(\r\n          {\r\n            isLoadingMessages: true\r\n          },\r\n          () => resolve()\r\n        );\r\n      })\r\n        .then(async () => {\r\n          if (this.props.onLoadOldMessages) {\r\n            await this.props.onLoadOldMessages();\r\n          }\r\n        })\r\n        .then(async () => {\r\n          await new Promise<void>(resolve => {\r\n            this.setState(\r\n              {\r\n                isLoadingMessages: false\r\n              },\r\n              () => {\r\n                if (this.scrollApi.scrolledToLoadThreshold()) {\r\n                  this.scrollApi.scrollTo(\r\n                    this.props.loadOldMessagesThreshold + 1\r\n                  );\r\n                }\r\n                resolve();\r\n              }\r\n            );\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/index.tsx","import * as React from 'react';\r\n\r\nexport interface ChatFeedStyles {\r\n  chatPanel?: React.CSSProperties;\r\n  showRecipientAvatarChatMessagesStyle?: React.CSSProperties;\r\n  showRecipientLastSeenMessageChatMessagesStyle?: React.CSSProperties;\r\n  showIsTypingChatMessagesStyle?: React.CSSProperties;\r\n  chatBubbleWrapper?: React.CSSProperties;\r\n  chatMessages?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatFeedStyles = {\r\n  chatPanel: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    position: 'relative'\r\n  },\r\n  showRecipientAvatarChatMessagesStyle: {\r\n    paddingLeft: 50\r\n  },\r\n  showIsTypingChatMessagesStyle: {\r\n    paddingBottom: 24,\r\n    position: 'relative'\r\n  },\r\n  showRecipientLastSeenMessageChatMessagesStyle: {\r\n    paddingRight: 30,\r\n  },\r\n  chatBubbleWrapper: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    overflow: 'visible',\r\n  },\r\n  chatMessages: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  }\r\n};\r\n\r\nexport default styles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/styles.ts","const groupBy = <T>(\r\n  array: Array<T>,\r\n  groupingKeyFn: (item: T) => string\r\n): { [key: string]: Array<T> } => {\r\n  if (typeof groupingKeyFn !== 'function') {\r\n    throw new Error('groupBy take a function as only parameter');\r\n  }\r\n  return array.reduce((result, item) => {\r\n    let key = groupingKeyFn(item);\r\n    if (!result[key]) { result[key] = []; }\r\n    result[key].push(item);\r\n    return result;\r\n  }, {});\r\n};\r\nexport { groupBy };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.ts","import * as React from 'react';\r\n\r\nconst styles = {\r\n  chatInput: {\r\n    flex: 1,\r\n  },\r\n  inputStyle: {\r\n    border: 'none',\r\n    borderTopWidth: '1',\r\n    borderTopStyle: 'solid',\r\n    borderTopColor: '#ddd',\r\n    fontSize: '16',\r\n    outline: 'none',\r\n    padding: '30',\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport interface ChatInputProps {\r\n  inputStyles?: object;\r\n  inputPlaceholder?: string;\r\n}\r\n\r\nconst ChatInput = (props: ChatInputProps) => {\r\n  const { inputStyles, inputPlaceholder } = props;\r\n  return (\r\n    <div className=\"react-bell-chat__chat-input\" style={styles.chatInput}>\r\n      <input type=\"text\" style={inputStyles || styles.inputStyle} placeholder={inputPlaceholder} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatInput/index.tsx"],"sourceRoot":""}