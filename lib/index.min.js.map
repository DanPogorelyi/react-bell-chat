{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\webpack/bootstrap b4bd85c57d3927e889c9","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\./node_modules/classnames/index.js","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/SystemChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/index.ts","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/utils/utils.ts","..\\react-bell-chat\\./src/lib/ChatInput/index.tsx"],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE_0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","join","default","undefined","React","styles_1","classnames_1","ChatBubble","_super","props","_this","state","mouseOverLastSeenContainer","__extends","render","message","_a","lastSeenAvatarStyles","yourAuthorId","styles","lastSeenAvatarClasses","userChatBubble","chatBubble","text","userText","recipientText","recipientChatBubble","firstChatBubbleInGroup","userFirstChatBubbleInGroup","recipientFirstChatBubbleInGroup","centerChatBubbleInGroup","userCenterChatBubbleInGroup","recipientCenterChatBubbleInGroup","lastChatBubbleInGroup","userLastChatBubbleInGroup","recipientLastChatBubbleInGroup","userChatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","chatBubbleWrapper","createdOn","userCreatedOn","recipientCreatedOn","isSendIconColor","loadingSpinnerColor","lastSeenByContainer","youAreAuthor","authorId","finalChatBubbleStyles","__assign","style","isFirstInGroup","isCenterInGroup","isLastInGroup","createElement","className","title","toLocaleString","toLocaleTimeString","hour","minute","hour12","isSend","width","height","xmlns","viewBox","preserveAspectRatio","background","fill","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","customLastSeenAvatar","onMouseEnter","setState","onMouseLeave","map","replace","author","container","marginTop","Component","position","left","top","lineHeight","fontWeight","color","backgroundColor","borderRadius","textAlign","borderTopRightRadius","pointerEvents","avatarName","split","part","toUpperCase","substr","systemChatBubbleStyles","systemChatBubbleContainer","fontSize","systemChatBubbleText","time","isTypingStyles","bottom","right","typingAuthors","chatScrollAreaStyles","overflow","padding","ChatScrollArea","ref","scrollContainer","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrollTop","scrolledToBottom","clientHeight","scrolledToLoadThreshold","loadOldMessagesThreshold","maxHeight","minHeight","onScroll","e","onLoadOldMessages","children","transition","display","lastSeenAvatarName","ChatBubble_1","SystemChatBubble_1","Avatar_1","BubbleGroup","renderGroup","messages","bubblesCentered","bubbleStyles","avatarStyles","bubbleClasses","avatarClasses","showRecipientAvatar","customChatBubble","customSystemChatBubble","SystemChatBubble","messageNodes","authors","filter","lastSeenMessageId","id","customAvatar","defaultProps","PureComponent","dateRowStyles","date","toLocaleDateString","weekday","year","month","day","loadingMessagesStyles","marginBottom","spinnerColor","margin","opacity","isVisible","_1","_2","Avatar","_3","IsTyping","_4","_5","LastSeenAvatar","BubbleGroup_1","_6","ChatFeed","_7","ChatInput","_8","_9","DateRow","_10","LoadingMessages","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","whiteSpace","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","IsTyping_1","ChatScrollArea_1","LastSeenAvatar_1","utils_1","DateRow_1","LoadingMessages_1","DefaultChatBubbleFunc","DefaultScrollAreaFunc","bind","isLoadingMessages","onMessageSend","scrollApi","shouldComponentUpdate","nextProps","nextState","shallowDiffers","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","b","renderMessages","dateRowClasses","bubbleGroupStyles","bubbleGroupClasses","_b","groups","groupBy","item","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","customDateRow","concat","index","messageGroup","renderIsTyping","isTypingClasses","isTyping","loadingMessagesStyle","chatFeedStyles","chatScrollArea","loadingMessagesClasses","chatScrollAreaClasses","chatPanel","customScrollArea","chatMessages","showRecipientAvatarChatMessages","showIsTyping","showIsTypingChatMessages","showRecipientLastSeenMessageChatMessages","customLoadingMessages","showLoadingMessages","hasOldMessages","Promise","resolve","then","__awaiter","sent","flexDirection","flexGrow","array","groupingKeyFn","Error","reduce","result","chatInputStyles","flex","border","borderTopWidth","borderTopStyle","borderTopColor","outline","inputPlaceholder","chatInput","input","placeholder"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b4bd85c57d3927e889c9","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/classnames/index.js\n// module id = 1\n// module chunks = 0","import * as React from 'react';\r\nimport Message from '../Message';\r\nimport { Author } from '../Author';\r\nimport {\r\n  LastSeenAvatarProps,\r\n  LastSeenAvatarStyles,\r\n  LastSeenAvatarClasses\r\n} from './../LastSeenAvatar';\r\nimport chatBubbleStyles, { ChatBubbleStyles } from './styles';\r\nexport { ChatBubbleStyles };\r\nimport classnames from 'classnames';\r\n\r\nexport interface ChatBubbleClasses {\r\n  chatBubbleWrapper?: string;\r\n  chatBubble?: string;\r\n  systemChatBubbleContainer?: string;\r\n  systemChatBubbleText?: string;\r\n  userChatBubbleOrientationNormal?: string;\r\n  recipientChatBubbleOrientationNormal?: string;\r\n  text?: string;\r\n  userText?: string;\r\n  recipientText?: string;\r\n  userChatBubble?: string;\r\n  recipientChatBubble?: string;\r\n  firstChatBubbleInGroup?: string;\r\n  userFirstChatBubbleInGroup?: string;\r\n  recipientFirstChatBubbleInGroup?: string;\r\n  lastChatBubbleInGroup?: string;\r\n  userLastChatBubbleInGroup?: string;\r\n  recipientLastChatBubbleInGroup?: string;\r\n  centerChatBubbleInGroup?: string;\r\n  userCenterChatBubbleInGroup?: string;\r\n  recipientCenterChatBubbleInGroup?: string;\r\n  createdOn?: string;\r\n  recipientCreatedOn?: string;\r\n  userCreatedOn?: string;\r\n  isSend?: string;\r\n\r\n  lastSeenByContainer?: string;\r\n}\r\n\r\nexport interface ChatBubbleProps {\r\n  message: Message;\r\n  author?: Author;\r\n\r\n  style?: React.CSSProperties;\r\n  styles?: ChatBubbleStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n\r\n  className?: string;\r\n  classes?: ChatBubbleClasses;\r\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\r\n\r\n  bubblesCentered?: boolean;\r\n  yourAuthorId: number;\r\n  isFirstInGroup?: boolean;\r\n  isLastInGroup?: boolean;\r\n  isCenterInGroup?: boolean;\r\n  lastSeenByAuthors?: Author[];\r\n  showRecipientLastSeenMessage?: boolean;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n}\r\n\r\nexport interface ChatBubbleState {\r\n  mouseOverLastSeenContainer: boolean;\r\n}\r\n\r\nexport default class ChatBubble extends React.Component<\r\n  ChatBubbleProps,\r\n  ChatBubbleState\r\n> {\r\n  constructor(props: ChatBubbleProps) {\r\n    super(props);\r\n    this.state = {\r\n      mouseOverLastSeenContainer: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.message) {\r\n      return null;\r\n    }\r\n\r\n    let { lastSeenAvatarStyles, yourAuthorId, styles, classes, lastSeenAvatarClasses } = this.props;\r\n\r\n    if (!classes) {\r\n      classes = {};\r\n    }\r\n\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const {\r\n      userChatBubble,\r\n      chatBubble,\r\n      text,\r\n      userText,\r\n      recipientText,\r\n      recipientChatBubble,\r\n      firstChatBubbleInGroup,\r\n      userFirstChatBubbleInGroup,\r\n      recipientFirstChatBubbleInGroup,\r\n      centerChatBubbleInGroup,\r\n      userCenterChatBubbleInGroup,\r\n      recipientCenterChatBubbleInGroup,\r\n      lastChatBubbleInGroup,\r\n      userLastChatBubbleInGroup,\r\n      recipientLastChatBubbleInGroup,\r\n      userChatBubbleOrientationNormal,\r\n      recipientChatBubbleOrientationNormal,\r\n      chatBubbleWrapper,\r\n      createdOn,\r\n      userCreatedOn,\r\n      recipientCreatedOn,\r\n      isSendIconColor,\r\n      loadingSpinnerColor,\r\n      lastSeenByContainer\r\n    } = styles;\r\n    const youAreAuthor = this.props.message.authorId === yourAuthorId;\r\n\r\n    // message.id 0 is reserved for blue\r\n    const finalChatBubbleStyles: React.CSSProperties = {\r\n      ...chatBubbleStyles.chatBubble,\r\n      ...chatBubble,\r\n      ...this.props.style,\r\n      ...(youAreAuthor\r\n        ? chatBubbleStyles.userChatBubble\r\n        : chatBubbleStyles.recipientChatBubble),\r\n      ...(youAreAuthor ? userChatBubble : recipientChatBubble),\r\n      ...(youAreAuthor\r\n        ? chatBubbleStyles.userChatBubbleOrientationNormal\r\n        : chatBubbleStyles.recipientChatBubbleOrientationNormal),\r\n      ...(youAreAuthor\r\n        ? userChatBubbleOrientationNormal\r\n        : recipientChatBubbleOrientationNormal),\r\n      ...(this.props.isFirstInGroup && chatBubbleStyles.firstChatBubbleInGroup),\r\n      ...(this.props.isFirstInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userFirstChatBubbleInGroup\r\n          : chatBubbleStyles.recipientFirstChatBubbleInGroup)),\r\n      ...(this.props.isCenterInGroup &&\r\n        chatBubbleStyles.centerChatBubbleInGroup),\r\n      ...(this.props.isCenterInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userCenterChatBubbleInGroup\r\n          : chatBubbleStyles.recipientCenterChatBubbleInGroup)),\r\n      ...(this.props.isLastInGroup && chatBubbleStyles.lastChatBubbleInGroup),\r\n      ...(this.props.isLastInGroup &&\r\n        (youAreAuthor\r\n          ? chatBubbleStyles.userLastChatBubbleInGroup\r\n          : chatBubbleStyles.recipientLastChatBubbleInGroup)),\r\n      ...(this.props.isFirstInGroup && firstChatBubbleInGroup),\r\n      ...(this.props.isFirstInGroup &&\r\n        (youAreAuthor\r\n          ? userFirstChatBubbleInGroup\r\n          : recipientFirstChatBubbleInGroup)),\r\n      ...(this.props.isCenterInGroup && centerChatBubbleInGroup),\r\n      ...(this.props.isCenterInGroup &&\r\n        (youAreAuthor\r\n          ? userCenterChatBubbleInGroup\r\n          : recipientCenterChatBubbleInGroup)),\r\n      ...(this.props.isLastInGroup && lastChatBubbleInGroup),\r\n      ...(this.props.isLastInGroup &&\r\n        (youAreAuthor\r\n          ? userLastChatBubbleInGroup\r\n          : recipientLastChatBubbleInGroup))\r\n    };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...chatBubbleStyles.chatBubbleWrapper,\r\n          ...chatBubbleWrapper\r\n        }}\r\n        className={classnames(\r\n          'react-bell-chat__chat-bubble__wrapper',\r\n          this.props.className,\r\n          classes.chatBubbleWrapper\r\n        )}\r\n      >\r\n        <div\r\n          style={{ ...finalChatBubbleStyles }}\r\n          className={classnames(\r\n            'react-bell-chat__chat-bubble',\r\n            this.props.className,\r\n            classes.chatBubble\r\n          )}\r\n        >\r\n          <span\r\n            style={{\r\n              ...chatBubbleStyles.text,\r\n              ...text,\r\n              ...(youAreAuthor ? userText : recipientText)\r\n            }}\r\n            className={classnames(\r\n              'react-bell-chat__chat-bubble__text',\r\n              classes.text,\r\n              youAreAuthor ? classes.userText : classes.recipientText\r\n            )}\r\n          >\r\n            {this.props.message.message}\r\n          </span>\r\n          {this.props.message.createdOn && (\r\n            <span\r\n              style={{\r\n                ...chatBubbleStyles.createdOn,\r\n                ...createdOn,\r\n                ...(youAreAuthor\r\n                  ? chatBubbleStyles.userCreatedOn\r\n                  : chatBubbleStyles.recipientCreatedOn),\r\n                ...(youAreAuthor ? userCreatedOn : recipientCreatedOn)\r\n              }}\r\n              className={classnames(\r\n                'react-bell-chat__chat-bubble__created-on',\r\n                classes.createdOn,\r\n                youAreAuthor\r\n                  ? classes.userCreatedOn\r\n                  : classes.recipientCreatedOn\r\n              )}\r\n              title={this.props.message.createdOn.toLocaleString()}\r\n            >\r\n              {this.props.message.createdOn.toLocaleTimeString([], {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n                hour12: true\r\n              })}\r\n            </span>\r\n          )}\r\n          {this.props.message.isSend !== undefined && youAreAuthor && (\r\n            <span\r\n              style={{\r\n                ...chatBubbleStyles.isSend\r\n              }}\r\n              className={classnames(\r\n                'react-bell-chat__chat-bubble__is-send',\r\n                classes.isSend\r\n              )}\r\n              title={this.props.message.isSend ? 'Send' : 'Sending'}\r\n            >\r\n              {this.props.message.isSend ? (\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path\r\n                    fill={\r\n                      isSendIconColor\r\n                        ? isSendIconColor\r\n                        : chatBubbleStyles.isSendIconColor\r\n                    }\r\n                    {\r\n                      /* tslint:disable-next-line:max-line-length*/ ...{}}\r\n                    d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\r\n                  />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 100 100\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path\r\n                    stroke=\"none\"\r\n                    d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\"\r\n                    fill={\r\n                      loadingSpinnerColor\r\n                        ? loadingSpinnerColor\r\n                        : chatBubbleStyles.loadingSpinnerColor\r\n                    }\r\n                    transform=\"rotate(78 50 52.5)\"\r\n                  >\r\n                    <animateTransform\r\n                      attributeName=\"transform\"\r\n                      type=\"rotate\"\r\n                      calcMode=\"linear\"\r\n                      values=\"0 50 52.5;360 50 52.5\"\r\n                      keyTimes=\"0;1\"\r\n                      dur=\"1s\"\r\n                      begin=\"0s\"\r\n                      repeatCount=\"indefinite\"\r\n                    />\r\n                  </path>\r\n                </svg>\r\n              )}\r\n            </span>\r\n          )}\r\n        </div>\r\n        {this.props.showRecipientLastSeenMessage &&\r\n          this.props.lastSeenByAuthors &&\r\n          this.props.lastSeenByAuthors.length > 0 &&\r\n          this.props.customLastSeenAvatar && (\r\n            <div\r\n              style={{\r\n                ...chatBubbleStyles.lastSeenByContainer,\r\n                ...lastSeenByContainer\r\n              }}\r\n              className={classnames(\r\n                'react-bell-chat__chat-bubble__last-seen-by__container',\r\n                classes.lastSeenByContainer\r\n              )}\r\n              onMouseEnter={() =>\r\n                this.setState({ mouseOverLastSeenContainer: true })\r\n              }\r\n              onMouseLeave={() =>\r\n                this.setState({ mouseOverLastSeenContainer: false })\r\n              }\r\n              title={\r\n                'Last seen by ' +\r\n                this.props.lastSeenByAuthors\r\n                  .map(a => a.name)\r\n                  .join(', ')\r\n                  .replace(/,(?!.*,)/gim, ' and')\r\n              }\r\n            >\r\n              {this.props.lastSeenByAuthors.map((a, i) => (\r\n                <this.props.customLastSeenAvatar\r\n                  key={i}\r\n                  author={a}\r\n                  styles={{\r\n                    ...lastSeenAvatarStyles,\r\n                    container: {\r\n                      ...(lastSeenAvatarStyles\r\n                        ? lastSeenAvatarStyles.container\r\n                        : {}),\r\n                      ...(i > 0 && !this.state.mouseOverLastSeenContainer\r\n                        ? { marginTop: -12 }\r\n                        : { marginTop: -4 })\r\n                    }\r\n                  }}\r\n                  classes={lastSeenAvatarClasses}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\nimport classnames from 'classnames';\r\n\r\nexport interface AvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nexport interface AvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nexport interface AvatarProps {\r\n  author: Author;\r\n  className?: string;\r\n  styles?: AvatarStyles;\r\n  classes?: AvatarClasses;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    left: -50,\r\n    top: 0,\r\n    width: 40,\r\n    height: 40,\r\n    lineHeight: '40px',\r\n    fontWeight: 400,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    borderTopRightRadius: 5\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst Avatar: React.SFC<AvatarProps> = props => {\r\n  const { author, classes, className } = props;\r\n  return (\r\n    author && (\r\n      <div\r\n        style={{\r\n          ...styles.container,\r\n          ...(props.styles && props.styles.container),\r\n          ...(props.style)\r\n        }}\r\n        title={author.name}\r\n        className={classnames(\r\n          'react-bell-chat__avatar',\r\n          classes && classes.container,\r\n          className\r\n        )}\r\n      >\r\n        <span\r\n          style={{ ...styles.text, ...(props.styles && props.styles.text) }}\r\n          className={classnames(\r\n            'react-bell-chat__avatar__text',\r\n            classes && classes.text\r\n          )}\r\n        >\r\n          {author.avatarName\r\n            ? author.avatarName\r\n            : author.name\r\n                .split(' ')\r\n                .map(part => part[0])\r\n                .join('')\r\n                .toUpperCase()\r\n                .substr(0, 3)}\r\n        </span>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/Avatar/index.tsx","import * as React from 'react';\r\nimport { ChatBubbleProps } from '../ChatBubble';\r\nimport { ChatBubbleStyles } from '../ChatBubble/styles';\r\nimport classnames from 'classnames';\r\n\r\nconst systemChatBubbleStyles: ChatBubbleStyles = {\r\n  systemChatBubbleContainer: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)'\r\n  } as React.CSSProperties\r\n};\r\n\r\nexport interface SystemChatBubbleProps extends ChatBubbleProps {}\r\n\r\nconst SystemChatBubble = (props: SystemChatBubbleProps) => {\r\n  let { styles, classes } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  const { systemChatBubbleContainer, systemChatBubbleText } = styles;\r\n  const time =\r\n    props.message.createdOn &&\r\n    props.message.createdOn.toLocaleTimeString([], {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  return (\r\n    props.message && (\r\n      <div\r\n        className={classnames(\r\n          'react-bell-chat__chat-bubble react-bell-chat__chat-bubble--system',\r\n          props.className,\r\n          classes.chatBubble\r\n        )}\r\n        style={{\r\n          ...systemChatBubbleStyles.systemChatBubbleContainer,\r\n          ...systemChatBubbleContainer,\r\n          ...props.style\r\n        }}\r\n      >\r\n        {time && (\r\n          <span\r\n            className={classnames(\r\n              'react-bell-chat__chat-bubble--system__created-on',\r\n              classes.createdOn\r\n            )}\r\n            title={props.message.createdOn.toLocaleString()}\r\n            style={{\r\n              ...systemChatBubbleStyles.systemChatBubbleText,\r\n              ...systemChatBubbleText\r\n            }}\r\n          >\r\n            {time}:{' '}\r\n          </span>\r\n        )}\r\n        {props.message.message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default SystemChatBubble;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/SystemChatBubble/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\nimport classnames from 'classnames';\r\n\r\nconst isTypingStyles: IsTypingStyles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    left: 0,\r\n    right: 0,\r\n    color: 'rgb(204, 204, 204)',\r\n    textAlign: 'center'\r\n  } as React.CSSProperties\r\n};\r\n\r\nexport interface IsTypingStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nexport interface IsTypingClasses {\r\n  container?: string;\r\n}\r\n\r\nexport interface IsTypingProps {\r\n  typingAuthors: Author[];\r\n  styles?: IsTypingStyles;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  classes?: IsTypingClasses;\r\n}\r\n\r\nconst IsTyping = (props: IsTypingProps) => {\r\n  let { styles, classes } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  const { container } = styles;\r\n\r\n  return (\r\n    props.typingAuthors &&\r\n    props.typingAuthors.length > 0 && (\r\n      <div\r\n        className={classnames(\r\n          'react-bell-chat__is-typing__container',\r\n          props.className,\r\n          classes.container\r\n        )}\r\n        style={{ ...isTypingStyles.container, ...container, ...props.style }}\r\n      >\r\n        {props.typingAuthors\r\n          .map(a => a.name)\r\n          .join(', ')\r\n          .replace(/,(?!.*,)/gim, ' and') +\r\n          (props.typingAuthors.length === 1 ? ' is ' : ' are ') +\r\n          'typing'}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default IsTyping;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/IsTyping/index.tsx","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport interface ChatScrollAreaStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nexport interface ChatScrollAreaClasses {\r\n  container?: string;\r\n}\r\n\r\nconst chatScrollAreaStyles: ChatScrollAreaStyles = {\r\n  container: {\r\n    overflow: 'auto',\r\n    padding: '0 10px'\r\n    // flexDirection: 'column-reverse'\r\n  }\r\n};\r\n\r\nexport interface ChatScrollAreaProps {\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n  children?: JSX.Element | JSX.Element[];\r\n  styles?: ChatScrollAreaStyles;\r\n  apiRef?: (api: ChatScrollAreaApi) => void;\r\n  loadOldMessagesThreshold: number;\r\n  onLoadOldMessages: () => Promise<void>;\r\n\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  classes?: ChatScrollAreaClasses;\r\n}\r\n\r\nexport interface ChatScrollAreaApi {\r\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\r\n  scrollTo: (top: number) => void;\r\n  scrollTop: () => number;\r\n  scrollHeight: () => number;\r\n  clientHeight: () => number;\r\n  scrolledToBottom: () => boolean;\r\n  scrolledToLoadThreshold: () => boolean; // Check if we are scrolled to threshold where we need to load messages\r\n}\r\n\r\nexport class ChatScrollArea extends React.Component<ChatScrollAreaProps> {\r\n  scrollContainer: HTMLDivElement;\r\n  constructor(props: ChatScrollAreaProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    let { styles, classes } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    if (!classes) {\r\n      classes = {};\r\n    }\r\n    const { container } = styles;\r\n    return (\r\n      <div\r\n        ref={scrollContainer => {\r\n          this.scrollContainer = scrollContainer;\r\n          this.props.apiRef &&\r\n            this.props.apiRef({\r\n              scrollToBottom: (behavior = 'auto') =>\r\n                scrollContainer &&\r\n                (scrollContainer.scrollTo\r\n                  ? scrollContainer.scrollTo({\r\n                      top: scrollContainer.scrollHeight,\r\n                      behavior\r\n                    })\r\n                  : (scrollContainer.scrollTop = scrollContainer.scrollHeight)),\r\n              scrollTo: top =>\r\n                scrollContainer &&\r\n                (scrollContainer.scrollTo\r\n                  ? scrollContainer.scrollTo({\r\n                      top: top\r\n                    })\r\n                  : (scrollContainer.scrollTop = top)),\r\n              scrolledToBottom: () =>\r\n                this.scrollContainer.clientHeight +\r\n                  this.scrollContainer.scrollTop ===\r\n                this.scrollContainer.scrollHeight,\r\n              scrolledToLoadThreshold: () =>\r\n                this.scrollContainer &&\r\n                this.scrollContainer.scrollTop <=\r\n                  this.props.loadOldMessagesThreshold,\r\n              scrollTop: () =>\r\n                this.scrollContainer && this.scrollContainer.scrollTop,\r\n              scrollHeight: () =>\r\n                this.scrollContainer && this.scrollContainer.scrollHeight,\r\n              clientHeight: () =>\r\n                this.scrollContainer && this.scrollContainer.clientHeight\r\n            });\r\n        }}\r\n        className={classnames(\r\n          'react-bell-chat__chat-scroll-area',\r\n          this.props.className,\r\n          classes.container\r\n        )}\r\n        style={{\r\n          ...chatScrollAreaStyles.container,\r\n          ...(this.props.maxHeight !== undefined\r\n            ? { maxHeight: this.props.maxHeight }\r\n            : {}),\r\n          ...(this.props.minHeight !== undefined\r\n            ? { minHeight: this.props.minHeight }\r\n            : {}),\r\n          ...container,\r\n          ...this.props.style\r\n        }}\r\n        onScroll={e =>\r\n          this.scrollContainer &&\r\n          this.scrollContainer.scrollTop <=\r\n            this.props.loadOldMessagesThreshold &&\r\n          this.props.onLoadOldMessages()\r\n        }\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatScrollArea;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatScrollArea/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\nimport classnames from 'classnames';\r\n\r\nexport interface LastSeenAvatarProps {\r\n  author: Author;\r\n  styles?: LastSeenAvatarStyles;\r\n  classes?: LastSeenAvatarClasses;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\nexport interface LastSeenAvatarClasses {\r\n  container?: string;\r\n  text?: string;\r\n}\r\n\r\nexport interface LastSeenAvatarStyles {\r\n  container?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n}\r\n\r\nconst lastSeenAvatarStyles = {\r\n  container: {\r\n    width: 20,\r\n    height: 20,\r\n    lineHeight: '20px',\r\n    fontWeight: 400,\r\n    fontSize: 10,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    transition: '0.3s all ease-in-out',\r\n    display: 'block',\r\n    position: 'relative'\r\n  } as React.CSSProperties,\r\n  text: {\r\n    pointerEvents: 'none'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst LastSeenAvatar: React.SFC<LastSeenAvatarProps> = props => {\r\n  let { styles, classes } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  const { container, text } = styles;\r\n  return (\r\n    props.author && (\r\n      <div\r\n        style={{\r\n          ...lastSeenAvatarStyles.container,\r\n          ...container,\r\n          ...props.style\r\n        }}\r\n        className={classnames(\r\n          'react-bell-chat__last-seen-avatar',\r\n          props.className,\r\n          classes.container\r\n        )}\r\n      >\r\n        <span\r\n          style={{ ...lastSeenAvatarStyles.text, ...text }}\r\n          className={classnames(\r\n            'react-bell-chat__last-seen-avatar__text',\r\n            classes.text\r\n          )}\r\n        >\r\n          {props.author.lastSeenAvatarName\r\n            ? props.author.lastSeenAvatarName\r\n            : props.author.name[0].toUpperCase()}\r\n        </span>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default LastSeenAvatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LastSeenAvatar/index.tsx","import * as React from 'react';\r\nimport DefaultChatBubble, {\r\n  ChatBubbleProps,\r\n  ChatBubbleStyles\r\n} from '../ChatBubble';\r\nimport DefaultSystemChatBubble from '../SystemChatBubble';\r\nimport bubbleGroupStyles, { BubbleGroupStyles } from './styles';\r\nimport { Message } from '../';\r\nimport { Author } from '../Author';\r\nimport Avatar, { AvatarProps, AvatarClasses } from '../Avatar';\r\nimport {\r\n  LastSeenAvatarProps,\r\n  LastSeenAvatarStyles,\r\n  LastSeenAvatarClasses\r\n} from '../LastSeenAvatar';\r\nimport { AvatarStyles } from './../Avatar/index';\r\nimport classnames from 'classnames';\r\nimport { ChatBubbleClasses } from './../ChatBubble/index';\r\n\r\nexport interface BubbleGroupClasses {\r\n  chatBubbleWrapper?: string;\r\n}\r\n\r\nexport interface BubbleGroupProps {\r\n  yourAuthorId?: number;\r\n  messages: Message[];\r\n  author: Author;\r\n  authors?: Author[];\r\n  showRecipientAvatar?: boolean;\r\n  bubblesCentered?: boolean;\r\n\r\n  className?: string;\r\n  classes?: BubbleGroupClasses;\r\n  bubbleClasses?: ChatBubbleClasses;\r\n  avatarClasses?: AvatarClasses;\r\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\r\n\r\n  style?: React.CSSProperties;\r\n  styles?: BubbleGroupStyles;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  avatarStyles?: AvatarStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customSystemChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  showRecipientLastSeenMessage?: boolean;\r\n}\r\n\r\nexport default class BubbleGroup extends React.PureComponent<BubbleGroupProps> {\r\n  public static defaultProps: BubbleGroupProps = {\r\n    messages: [],\r\n    author: undefined,\r\n    customAvatar: Avatar,\r\n    showRecipientLastSeenMessage: false\r\n  };\r\n\r\n  constructor(props: BubbleGroupProps) {\r\n    super(props);\r\n  }\r\n\r\n  renderGroup(messages: Message[], author: Author) {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const { chatBubbleWrapper } = styles;\r\n    const {\r\n      bubblesCentered,\r\n\r\n      bubbleStyles,\r\n      lastSeenAvatarStyles,\r\n      avatarStyles,\r\n\r\n      classes,\r\n      bubbleClasses,\r\n      lastSeenAvatarClasses,\r\n      avatarClasses,\r\n\r\n      showRecipientAvatar,\r\n      customChatBubble,\r\n      customSystemChatBubble,\r\n      showRecipientLastSeenMessage,\r\n      customLastSeenAvatar\r\n    } = this.props;\r\n    const ChatBubble = customChatBubble || DefaultChatBubble;\r\n    const SystemChatBubble = customSystemChatBubble || DefaultSystemChatBubble;\r\n\r\n    const messageNodes = messages.map((message, i) => {\r\n      const props: ChatBubbleProps = {\r\n        yourAuthorId: this.props.yourAuthorId,\r\n        author,\r\n        message,\r\n        bubblesCentered,\r\n\r\n        styles: bubbleStyles,\r\n        lastSeenAvatarStyles,\r\n\r\n        classes: bubbleClasses,\r\n        lastSeenAvatarClasses,\r\n\r\n        isFirstInGroup: i === 0,\r\n        isLastInGroup: i === messages.length - 1 && messages.length > 1,\r\n        isCenterInGroup: i < messages.length - 1 && messages.length > 1,\r\n        lastSeenByAuthors:\r\n          this.props.authors &&\r\n          this.props.authors.filter(\r\n            a =>\r\n              a.lastSeenMessageId !== undefined &&\r\n              a.lastSeenMessageId === message.id\r\n          ),\r\n        showRecipientLastSeenMessage,\r\n        customLastSeenAvatar\r\n      };\r\n      return message.authorId !== undefined ? (\r\n        <ChatBubble key={i} {...props} />\r\n      ) : (\r\n        <SystemChatBubble key={i} {...props} />\r\n      );\r\n    });\r\n\r\n    const youAreAuthor = author && this.props.yourAuthorId === author.id;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...bubbleGroupStyles.chatBubbleWrapper,\r\n          ...chatBubbleWrapper,\r\n          ...this.props.style\r\n        }}\r\n        className={classnames(\r\n          'react-bell-chat__bubble-group',\r\n          classes && classes.chatBubbleWrapper,\r\n          this.props.className\r\n        )}\r\n      >\r\n        {!youAreAuthor &&\r\n          showRecipientAvatar &&\r\n          author &&\r\n          this.props.customAvatar && (\r\n            <this.props.customAvatar\r\n              author={this.props.author}\r\n              styles={avatarStyles}\r\n              classes={avatarClasses}\r\n            />\r\n          )}\r\n        {messageNodes}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { messages, author } = this.props;\r\n    return this.renderGroup(messages, author);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/index.tsx","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport interface DateRowStyles {\r\n  container?: React.CSSProperties;\r\n}\r\n\r\nexport interface DateRowClasses {\r\n  container?: string;\r\n}\r\n\r\nconst dateRowStyles: DateRowStyles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)'\r\n  }\r\n};\r\n\r\nexport interface DateRowProps {\r\n  date: Date;\r\n  styles?: DateRowStyles;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  classes?: DateRowClasses;\r\n}\r\n\r\nconst DateRow = (props: DateRowProps) => {\r\n  let { styles, classes } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  const { container } = styles;\r\n  return (\r\n    props.date && (\r\n      <div\r\n        className={classnames(\r\n          'react-bell-chat__date-row',\r\n          props.className,\r\n          classes.container\r\n        )}\r\n        style={{\r\n          ...dateRowStyles.container,\r\n          ...container,\r\n          ...props.style\r\n        }}\r\n        title={props.date.toLocaleDateString([], {\r\n          weekday: 'long',\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        })}\r\n      >\r\n        {props.date.toLocaleDateString()}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DateRow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/DateRow/index.tsx","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst loadingMessagesStyles: LoadingMessagesStyle = {\r\n  container: {\r\n    display: 'flex',\r\n    marginBottom: 10\r\n  },\r\n  spinnerColor: 'rgb(0, 132, 255)'\r\n};\r\n\r\nexport interface LoadingMessagesClasses {\r\n  container?: string;\r\n}\r\n\r\nexport interface LoadingMessagesStyle {\r\n  container?: React.CSSProperties;\r\n  spinnerColor?: string;\r\n}\r\n\r\nexport interface LoadingMessagesProps {\r\n  styles?: LoadingMessagesStyle;\r\n  classes?: LoadingMessagesClasses;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  isVisible: boolean;\r\n}\r\n\r\nconst LoadingMessages: React.SFC<LoadingMessagesProps> = props => {\r\n  let { styles, classes } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  const { container, spinnerColor } = styles;\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        'react-bell-chat__loading-messages',\r\n        props.className,\r\n        classes.container\r\n      )}\r\n      style={{\r\n        ...loadingMessagesStyles.container,\r\n        ...container,\r\n        ...props.style\r\n      }}\r\n    >\r\n      <svg\r\n        width=\"40px\"\r\n        height=\"40px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 100 100\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n        style={{\r\n          background: 'none',\r\n          margin: 'auto',\r\n          fill: spinnerColor\r\n            ? spinnerColor\r\n            : loadingMessagesStyles.spinnerColor,\r\n          opacity: props.isVisible ? 1 : 0,\r\n          transition: '0.3s all ease-in-out'\r\n        }}\r\n      >\r\n        <title>Loading messages</title>\r\n        <path\r\n          stroke=\"none\"\r\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\r\n          transform=\"rotate(42 50 53)\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            calcMode=\"linear\"\r\n            values=\"0 50 53;360 50 53\"\r\n            keyTimes=\"0;1\"\r\n            dur=\"1s\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingMessages;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LoadingMessages/index.tsx","import ChatBubble, { ChatBubbleProps } from './ChatBubble/';\r\nimport Avatar, { AvatarProps } from './Avatar/';\r\nimport IsTyping, { IsTypingProps } from './IsTyping/';\r\nimport ChatScrollArea, { ChatScrollAreaProps, ChatScrollAreaApi } from './ChatScrollArea/';\r\nimport LastSeenAvatar, { LastSeenAvatarProps } from './LastSeenAvatar/';\r\nimport BubbleGroup, { BubbleGroupProps } from './BubbleGroup';\r\nimport ChatFeed, { ChatFeedProps, ChatFeedApi } from './ChatFeed/';\r\nimport ChatInput, { ChatInputProps } from './ChatInput/';\r\nimport SystemChatBubble from './SystemChatBubble/';\r\nimport DateRow, { DateRowProps } from './DateRow/';\r\nimport LoadingMessages, { LoadingMessagesProps } from './LoadingMessages/';\r\nimport Message from './Message/';\r\nimport Author from './Author/';\r\n\r\nexport {\r\n  ChatFeed,\r\n  ChatFeedProps,\r\n  ChatFeedApi,\r\n  ChatInput,\r\n  ChatInputProps,\r\n  LoadingMessages,\r\n  LoadingMessagesProps,\r\n  DateRow,\r\n  DateRowProps,\r\n  ChatBubble,\r\n  ChatBubbleProps,\r\n  SystemChatBubble,\r\n  BubbleGroup,\r\n  BubbleGroupProps,\r\n  Message,\r\n  Author,\r\n  Avatar,\r\n  AvatarProps,\r\n  LastSeenAvatar,\r\n  LastSeenAvatarProps,\r\n  IsTyping,\r\n  IsTypingProps,\r\n  ChatScrollArea,\r\n  ChatScrollAreaProps,\r\n  ChatScrollAreaApi\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.ts","import * as React from 'react';\r\n\r\nexport interface ChatBubbleStyles {\r\n  chatBubbleWrapper?: React.CSSProperties;\r\n  chatBubble?: React.CSSProperties;\r\n  systemChatBubbleContainer?: React.CSSProperties;\r\n  systemChatBubbleText?: React.CSSProperties;\r\n  userChatBubbleOrientationNormal?: React.CSSProperties;\r\n  recipientChatBubbleOrientationNormal?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n  userText?: React.CSSProperties;\r\n  recipientText?: React.CSSProperties;\r\n  userChatBubble?: React.CSSProperties;\r\n  recipientChatBubble?: React.CSSProperties;\r\n  firstChatBubbleInGroup?: React.CSSProperties;\r\n  userFirstChatBubbleInGroup?: React.CSSProperties;\r\n  recipientFirstChatBubbleInGroup?: React.CSSProperties;\r\n  lastChatBubbleInGroup?: React.CSSProperties;\r\n  userLastChatBubbleInGroup?: React.CSSProperties;\r\n  recipientLastChatBubbleInGroup?: React.CSSProperties;\r\n  centerChatBubbleInGroup?: React.CSSProperties;\r\n  userCenterChatBubbleInGroup?: React.CSSProperties;\r\n  recipientCenterChatBubbleInGroup?: React.CSSProperties;\r\n  createdOn?: React.CSSProperties;\r\n  recipientCreatedOn?: React.CSSProperties;\r\n  userCreatedOn?: React.CSSProperties;\r\n  isSend?: React.CSSProperties;\r\n\r\n  lastSeenByContainer?: React.CSSProperties;\r\n  loadingSpinnerColor?: string;\r\n  isSendIconColor?: string;\r\n}\r\n\r\nconst styles: ChatBubbleStyles = {\r\n  chatBubbleWrapper: {\r\n    position: 'relative',\r\n    marginBottom: 2,\r\n    display: 'flex'\r\n  } as React.CSSProperties,\r\n  chatBubble: {\r\n    position: 'relative',\r\n    backgroundColor: '#0084FF',\r\n    borderRadius: 7,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    maxWidth: '80%',\r\n    paddingTop: 8,\r\n    paddingBottom: 10,\r\n    paddingLeft: 14,\r\n    paddingRight: 14\r\n    // boxShadow: 'rgba(0, 0, 0, 0.3) 2px 2px 2px'\r\n  } as React.CSSProperties,\r\n  userChatBubbleOrientationNormal: {\r\n    marginRight: 0\r\n  } as React.CSSProperties,\r\n  recipientChatBubbleOrientationNormal: {\r\n    marginLeft: 0\r\n  } as React.CSSProperties,\r\n  recipientChatBubble: {\r\n    backgroundColor: '#ccc'\r\n  } as React.CSSProperties,\r\n  text: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 300,\r\n    margin: 0,\r\n    marginRight: 30,\r\n    whiteSpace: 'pre'\r\n  } as React.CSSProperties,\r\n  userFirstChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientFirstChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  userLastChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientLastChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  userCenterChatBubbleInGroup: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientCenterChatBubbleInGroup: {\r\n    borderBottomLeftRadius: 0,\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  createdOn: {\r\n    position: 'absolute',\r\n    right: 14,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n    color: 'rgba(255, 255, 255, 0.55)'\r\n  } as React.CSSProperties,\r\n  isSend: {\r\n    position: 'absolute',\r\n    right: 2,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n  } as React.CSSProperties,\r\n  lastSeenByContainer: {\r\n    position: 'absolute',\r\n    right: -30,\r\n    top: 0,\r\n    width: 20,\r\n    height: '100%',\r\n  } as React.CSSProperties,\r\n  loadingSpinnerColor: 'rgba(255, 255, 255, 0.55)',\r\n  isSendIconColor: '#cddc39',\r\n};\r\nexport default styles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/styles.ts","import * as React from 'react';\r\n\r\nexport interface BubbleGroupStyles {\r\n  chatBubbleWrapper?: React.CSSProperties;\r\n}\r\n\r\nexport default {\r\n  chatBubbleWrapper: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    position: 'relative'\r\n  },\r\n} as BubbleGroupStyles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/styles.ts","// Copyright 2017 Brandon Mowat\r\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\r\n// other developers make chat interfaces.\r\n\r\nimport * as React from 'react';\r\nimport BubbleGroup, { BubbleGroupClasses } from '../BubbleGroup';\r\nimport DefaultChatBubble, { ChatBubbleProps } from '../ChatBubble';\r\nimport Message from '../Message';\r\nimport chatStyles, { ChatFeedStyles } from './styles';\r\nimport { Author } from '../Author';\r\nimport { ChatBubbleStyles } from '../ChatBubble/';\r\nimport Avatar, { AvatarProps, AvatarStyles, AvatarClasses } from '../Avatar';\r\nimport IsTyping, { IsTypingStyles, IsTypingClasses } from '../IsTyping';\r\nimport ChatScrollArea, {\r\n  ChatScrollAreaProps,\r\n  ChatScrollAreaApi,\r\n  ChatScrollAreaStyles,\r\n  ChatScrollAreaClasses\r\n} from '../ChatScrollArea';\r\nimport LastSeenAvatar, {\r\n  LastSeenAvatarProps,\r\n  LastSeenAvatarStyles,\r\n  LastSeenAvatarClasses\r\n} from '../LastSeenAvatar';\r\nimport { groupBy } from '../utils/utils';\r\nimport DateRow, {\r\n  DateRowProps,\r\n  DateRowStyles,\r\n  DateRowClasses\r\n} from '../DateRow';\r\nimport LoadingMessages, {\r\n  LoadingMessagesProps,\r\n  LoadingMessagesStyle,\r\n  LoadingMessagesClasses\r\n} from '../LoadingMessages';\r\nimport SystemChatBubble from '../SystemChatBubble';\r\nimport classnames from 'classnames';\r\nimport { BubbleGroupStyles } from '../BubbleGroup/styles';\r\n\r\n// Model for ChatFeed props.\r\n\r\nexport { ChatFeedStyles };\r\n\r\nexport interface ChatFeedClasses {\r\n  chatPanel?: string;\r\n  showRecipientAvatarChatMessages?: string;\r\n  showRecipientLastSeenMessageChatMessages?: string;\r\n  showIsTypingChatMessages?: string;\r\n  chatMessages?: string;\r\n}\r\n\r\nexport interface ChatFeedProps {\r\n  // Structural props\r\n  className?: string;\r\n\r\n  // Functional props\r\n  messages: Message[];\r\n  authors: Author[];\r\n  yourAuthorId: number;\r\n  hasOldMessages?: boolean;\r\n  loadOldMessagesThreshold?: number;\r\n\r\n  // Visual props\r\n  bubblesCentered?: boolean;\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n\r\n  // Switches\r\n  showDateRow?: boolean;\r\n  showRecipientAvatar?: boolean;\r\n  showRecipientLastSeenMessage?: boolean;\r\n  showIsTyping?: boolean;\r\n  showLoadingMessages?: boolean;\r\n\r\n  // Custom components\r\n  customLoadingMessages?: (props: LoadingMessagesProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customSystemChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customScrollArea?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customIsTyping?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customDateRow?: (props: DateRowProps) => JSX.Element;\r\n\r\n  // Callbacks\r\n  onLoadOldMessages?: () => Promise<void>;\r\n\r\n  // Styles\r\n  style?: React.CSSProperties;\r\n  styles?: ChatFeedStyles;\r\n  bubbleGroupStyles?: BubbleGroupStyles;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  chatScrollArea?: ChatScrollAreaStyles;\r\n  avatarStyles?: AvatarStyles;\r\n  lastSeenAvatarStyles?: LastSeenAvatarStyles;\r\n  dateRowStyles?: DateRowStyles;\r\n  loadingMessagesStyle?: LoadingMessagesStyle;\r\n  isTypingStyles?: IsTypingStyles;\r\n  chatFeedStyles?: ChatFeedStyles;\r\n\r\n  // Classes\r\n  classes?: ChatFeedClasses;\r\n  bubbleClasses?: BubbleGroupClasses;\r\n  bubbleGroupClasses?: BubbleGroupClasses;\r\n  chatScrollAreaClasses?: ChatScrollAreaClasses;\r\n  avatarClasses?: AvatarClasses;\r\n  lastSeenAvatarClasses?: LastSeenAvatarClasses;\r\n  dateRowClasses?: DateRowClasses;\r\n  loadingMessagesClasses?: LoadingMessagesClasses;\r\n  isTypingClasses?: IsTypingClasses;\r\n  chatFeedClasses?: ChatFeedStyles;\r\n}\r\n\r\nexport interface ChatFeedState {\r\n  isLoadingMessages: boolean;\r\n}\r\n\r\nexport interface ChatFeedApi {\r\n  onMessageSend: () => void;\r\n  scrollApi: ChatScrollAreaApi;\r\n}\r\n\r\nconst DefaultChatBubbleFunc = props => <DefaultChatBubble {...props} />;\r\nconst DefaultScrollAreaFunc = props => <ChatScrollArea {...props} />;\r\n\r\nexport interface ChatFeedSnapshot {\r\n  wasScrolledToBottom: boolean;\r\n  scrollHeight: number;\r\n  clientHeight: number;\r\n}\r\n\r\n// React component to render a complete chat feed\r\nexport default class ChatFeed\r\n  extends React.Component<ChatFeedProps, ChatFeedState>\r\n  implements ChatFeedApi {\r\n  public static defaultProps: ChatFeedProps = {\r\n    messages: [],\r\n    authors: [],\r\n    customChatBubble: DefaultChatBubbleFunc,\r\n    customAvatar: Avatar,\r\n    customScrollArea: DefaultScrollAreaFunc,\r\n    customLastSeenAvatar: LastSeenAvatar,\r\n    customDateRow: DateRow,\r\n    customLoadingMessages: LoadingMessages,\r\n    yourAuthorId: 0,\r\n    loadOldMessagesThreshold: 50,\r\n    customSystemChatBubble: SystemChatBubble\r\n  };\r\n\r\n  public scrollApi: ChatScrollAreaApi;\r\n\r\n  constructor(props: ChatFeedProps) {\r\n    super(props);\r\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\r\n    this.state = {\r\n      isLoadingMessages: false\r\n    };\r\n  }\r\n\r\n  public onMessageSend() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ChatFeedProps, nextState: ChatFeedState) {\r\n    return (\r\n      this.shallowDiffers(this.props, nextProps) ||\r\n      this.shallowDiffers(this.state, nextState)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps: ChatFeedProps, prevState: ChatFeedState) {\r\n    const wasScrolledToBottom =\r\n      this.scrollApi && this.scrollApi.scrolledToBottom();\r\n    const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\r\n    const clientHeight = this.scrollApi && this.scrollApi.clientHeight();\r\n\r\n    return {\r\n      wasScrolledToBottom,\r\n      scrollHeight,\r\n      clientHeight\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(\r\n    prevProps: ChatFeedProps,\r\n    prevState: ChatFeedState,\r\n    snapshot: ChatFeedSnapshot\r\n  ) {\r\n    if (\r\n      this.props.messages.length !== prevProps.messages.length &&\r\n      snapshot &&\r\n      snapshot.wasScrolledToBottom\r\n    ) {\r\n      this.scrollApi.scrollToBottom();\r\n    } else if (\r\n      this.props.messages.length !== prevProps.messages.length &&\r\n      snapshot &&\r\n      prevState.isLoadingMessages\r\n    ) {\r\n      const scrollHeight = this.scrollApi && this.scrollApi.scrollHeight();\r\n      this.scrollApi.scrollTo(scrollHeight - snapshot.scrollHeight);\r\n    }\r\n  }\r\n\r\n  shallowDiffers(a: object, b: object) {\r\n    for (let i in a) {\r\n      if (!(i in b)) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in b) {\r\n      if (a[i] !== b[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determines what type of message/messages to render.\r\n   */\r\n  renderMessages(messages: Message[]) {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const {\r\n      bubbleStyles,\r\n      bubbleClasses,\r\n      dateRowStyles,\r\n      dateRowClasses,\r\n      avatarStyles,\r\n      avatarClasses,\r\n      lastSeenAvatarStyles,\r\n      lastSeenAvatarClasses,\r\n      bubbleGroupStyles,\r\n      bubbleGroupClasses\r\n    } = this.props;\r\n    const { customChatBubble, showRecipientAvatar } = this.props;\r\n\r\n    // First group by days\r\n    const groups = groupBy(\r\n      messages,\r\n      item => item.createdOn && item.createdOn.toDateString()\r\n    );\r\n    let messageNodes: JSX.Element[] = [];\r\n    let jsxKey = 0;\r\n    Object.keys(groups).forEach(key => {\r\n      let group = [];\r\n      const messagesGroup = groups[key];\r\n      if (\r\n        messagesGroup[0] &&\r\n        messagesGroup[0].createdOn &&\r\n        this.props.showDateRow\r\n      ) {\r\n        messageNodes.push(\r\n          <this.props.customDateRow\r\n            key={key}\r\n            date={messagesGroup[0].createdOn}\r\n            styles={dateRowStyles}\r\n            classes={dateRowClasses}\r\n          />\r\n        );\r\n      }\r\n      messageNodes = messageNodes.concat(\r\n        messagesGroup.map((message, index) => {\r\n          group.push(message);\r\n          // Find diff in message type or no more messages\r\n          if (\r\n            !messagesGroup[index + 1] ||\r\n            messagesGroup[index + 1].authorId !== message.authorId\r\n          ) {\r\n            const messageGroup = group;\r\n            const author =\r\n              this.props.authors &&\r\n              this.props.authors.filter(a => a.id === message.authorId)[0];\r\n            group = [];\r\n            jsxKey++;\r\n            return (\r\n              <BubbleGroup\r\n                key={jsxKey}\r\n                yourAuthorId={this.props.yourAuthorId}\r\n                messages={messageGroup}\r\n                author={author}\r\n                authors={this.props.authors}\r\n                showRecipientAvatar={showRecipientAvatar}\r\n                customChatBubble={customChatBubble}\r\n                bubbleStyles={bubbleStyles}\r\n                bubbleClasses={bubbleClasses}\r\n                avatarStyles={avatarStyles}\r\n                avatarClasses={avatarClasses}\r\n                lastSeenAvatarStyles={lastSeenAvatarStyles}\r\n                lastSeenAvatarClasses={lastSeenAvatarClasses}\r\n                showRecipientLastSeenMessage={\r\n                  this.props.showRecipientLastSeenMessage\r\n                }\r\n                customAvatar={this.props.customAvatar}\r\n                customLastSeenAvatar={this.props.customLastSeenAvatar}\r\n                customSystemChatBubble={this.props.customSystemChatBubble}\r\n                classes={bubbleGroupClasses}\r\n                styles={bubbleGroupStyles}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n    });\r\n    return messageNodes;\r\n  }\r\n\r\n  renderIsTyping() {\r\n    let { styles } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    const { isTypingStyles, isTypingClasses } = this.props;\r\n    const typingAuthors =\r\n      this.props.authors &&\r\n      this.props.authors.filter(\r\n        a => a.isTyping && a.id !== this.props.yourAuthorId\r\n      );\r\n    if (!typingAuthors || typingAuthors.length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <IsTyping\r\n        typingAuthors={typingAuthors}\r\n        styles={isTypingStyles}\r\n        classes={isTypingClasses}\r\n      />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * render : renders our chat feed\r\n   */\r\n  render() {\r\n    let { styles, classes } = this.props;\r\n    if (!styles) {\r\n      styles = {};\r\n    }\r\n    if (!classes) {\r\n      classes = {};\r\n    }\r\n    const {\r\n      loadingMessagesStyle,\r\n      chatFeedStyles,\r\n      chatScrollArea,\r\n      loadingMessagesClasses,\r\n      chatScrollAreaClasses\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className={classnames(\r\n          'react-bell-chat__chat-panel',\r\n          this.props.className,\r\n          classes.chatPanel\r\n        )}\r\n        style={{\r\n          ...chatStyles.chatPanel,\r\n          ...(chatFeedStyles && chatFeedStyles.chatPanel),\r\n          ...this.props.style\r\n        }}\r\n      >\r\n        <this.props.customScrollArea\r\n          minHeight={this.props.minHeight}\r\n          maxHeight={this.props.maxHeight}\r\n          apiRef={e => (this.scrollApi = e)}\r\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\r\n          onLoadOldMessages={this.onLoadOldMessages}\r\n          styles={chatScrollArea}\r\n          classes={chatScrollAreaClasses}\r\n        >\r\n          <div\r\n            style={{\r\n              ...chatStyles.chatMessages,\r\n              ...(this.props.showRecipientAvatar &&\r\n                chatStyles.showRecipientAvatarChatMessages),\r\n              ...(this.props.showRecipientAvatar &&\r\n                styles.showRecipientAvatarChatMessages),\r\n              ...(this.props.showIsTyping &&\r\n                chatStyles.showIsTypingChatMessages),\r\n              ...(this.props.showIsTyping && styles.showIsTypingChatMessages),\r\n              ...(this.props.showRecipientLastSeenMessage &&\r\n                chatStyles.showRecipientLastSeenMessageChatMessages),\r\n              ...(this.props.showRecipientLastSeenMessage &&\r\n                styles.showRecipientLastSeenMessageChatMessages)\r\n            }}\r\n            className={classnames(\r\n              'react-bell-chat__chat-messages',\r\n              classes.chatMessages,\r\n              this.props.showRecipientAvatar &&\r\n                classes.showRecipientAvatarChatMessages,\r\n              this.props.showIsTyping && classes.showIsTypingChatMessages,\r\n              this.props.showRecipientLastSeenMessage &&\r\n                classes.showRecipientLastSeenMessageChatMessages\r\n            )}\r\n          >\r\n            {\r\n              <this.props.customLoadingMessages\r\n                isVisible={\r\n                  this.props.showLoadingMessages || this.state.isLoadingMessages\r\n                }\r\n                styles={loadingMessagesStyle}\r\n                classes={loadingMessagesClasses}\r\n              />\r\n            }\r\n            {this.renderMessages(this.props.messages)}\r\n            {this.props.showIsTyping && this.renderIsTyping()}\r\n          </div>\r\n        </this.props.customScrollArea>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onLoadOldMessages() {\r\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\r\n      return new Promise<void>(resolve => {\r\n        this.setState(\r\n          {\r\n            isLoadingMessages: true\r\n          },\r\n          () => resolve()\r\n        );\r\n      })\r\n        .then(async () => {\r\n          if (this.props.onLoadOldMessages) {\r\n            await this.props.onLoadOldMessages();\r\n          }\r\n        })\r\n        .then(async () => {\r\n          await new Promise<void>(resolve => {\r\n            this.setState(\r\n              {\r\n                isLoadingMessages: false\r\n              },\r\n              () => {\r\n                if (this.scrollApi.scrolledToLoadThreshold()) {\r\n                  this.scrollApi.scrollTo(\r\n                    this.props.loadOldMessagesThreshold + 1\r\n                  );\r\n                }\r\n                resolve();\r\n              }\r\n            );\r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/index.tsx","import * as React from 'react';\r\n\r\nexport interface ChatFeedStyles {\r\n  chatPanel?: React.CSSProperties;\r\n  showRecipientAvatarChatMessages?: React.CSSProperties;\r\n  showRecipientLastSeenMessageChatMessages?: React.CSSProperties;\r\n  showIsTypingChatMessages?: React.CSSProperties;\r\n  chatMessages?: React.CSSProperties;\r\n}\r\n\r\nconst styles: ChatFeedStyles = {\r\n  chatPanel: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    position: 'relative'\r\n  },\r\n  showRecipientAvatarChatMessages: {\r\n    paddingLeft: 50\r\n  },\r\n  showIsTypingChatMessages: {\r\n    paddingBottom: 24,\r\n    position: 'relative'\r\n  },\r\n  showRecipientLastSeenMessageChatMessages: {\r\n    paddingRight: 30\r\n  },\r\n  chatMessages: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10\r\n  }\r\n};\r\n\r\nexport default styles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/styles.ts","const groupBy = <T>(\r\n  array: Array<T>,\r\n  groupingKeyFn: (item: T) => string\r\n): { [key: string]: Array<T> } => {\r\n  if (typeof groupingKeyFn !== 'function') {\r\n    throw new Error('groupBy take a function as only parameter');\r\n  }\r\n  return array.reduce((result, item) => {\r\n    let key = groupingKeyFn(item);\r\n    if (!result[key]) { result[key] = []; }\r\n    result[key].push(item);\r\n    return result;\r\n  }, {});\r\n};\r\nexport { groupBy };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.ts","import * as React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nexport interface ChatInputStyles {\r\n  chatInput?: React.CSSProperties;\r\n  input?: React.CSSProperties;\r\n}\r\n\r\nexport interface ChatInputClasses {\r\n  chatInput?: string;\r\n  input?: string;\r\n}\r\n\r\nconst chatInputStyles: ChatInputStyles = {\r\n  chatInput: {\r\n    flex: 1\r\n  },\r\n  input: {\r\n    border: 'none',\r\n    borderTopWidth: '1',\r\n    borderTopStyle: 'solid',\r\n    borderTopColor: '#ddd',\r\n    fontSize: '16',\r\n    outline: 'none',\r\n    padding: '30',\r\n    width: '100%'\r\n  }\r\n};\r\n\r\nexport interface ChatInputProps {\r\n  styles?: ChatInputStyles;\r\n  inputPlaceholder?: string;\r\n  className?: string;\r\n  classes?: ChatInputClasses;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst ChatInput = (props: ChatInputProps) => {\r\n  let { styles, classes, inputPlaceholder } = props;\r\n  if (!styles) {\r\n    styles = {};\r\n  }\r\n  if (!classes) {\r\n    classes = {};\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        'react-bell-chat__chat-input',\r\n        props.className,\r\n        classes.chatInput\r\n      )}\r\n      style={{ ...chatInputStyles.chatInput, ...styles.chatInput }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className={classnames(\r\n          'react-bell-chat__chat-input__input',\r\n          classes.input\r\n        )}\r\n        style={{ ...chatInputStyles.input, ...styles.input }}\r\n        placeholder={inputPlaceholder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatInput/index.tsx"],"sourceRoot":""}