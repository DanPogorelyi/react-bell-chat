{"version":3,"sources":["..\\react-bell-chat\\webpack/universalModuleDefinition","..\\react-bell-chat\\webpack/bootstrap 9cd24cf0c4a6b8408e22","..\\react-bell-chat\\external \"react\"","..\\react-bell-chat\\./src/lib/ChatBubble/index.tsx","..\\react-bell-chat\\./src/lib/Avatar/index.tsx","..\\react-bell-chat\\./src/lib/IsTyping/index.tsx","..\\react-bell-chat\\./src/lib/ChatScrollArea/index.tsx","..\\react-bell-chat\\./src/lib/LastSeenAvatar/index.tsx","..\\react-bell-chat\\./src/lib/BubbleGroup/index.tsx","..\\react-bell-chat\\./src/lib/DateRow/index.tsx","..\\react-bell-chat\\./src/lib/LoadingMessages/index.tsx","..\\react-bell-chat\\./src/lib/index.ts","..\\react-bell-chat\\./src/lib/ChatBubble/styles.ts","..\\react-bell-chat\\./src/lib/BubbleGroup/styles.ts","..\\react-bell-chat\\./src/lib/ChatFeed/index.tsx","..\\react-bell-chat\\./src/lib/ChatFeed/styles.ts","..\\react-bell-chat\\./src/lib/utils/utils.ts","..\\react-bell-chat\\./src/lib/ChatInput/index.tsx"],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE_0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","React","styles_1","defaultBubbleStyles","userBubble","recipientBubble","chatBubble","text","createdOn","recipientCreatedOn","loadingSpinnerColor","isSendIconColor","ChatBubble","_super","props","_this","state","mouseOverLastSeenContainer","__extends","render","message","yourAuthorId","bubbleStyles","youAreAuthor","authorId","chatBubbleStyles","__assign","default","recipientChatBubble","chatBubbleOrientationNormal","recipientChatBubbleOrientationNormal","isFirstInGroup","firstChatBubbleInGroup","recipientFirstChatBubbleInGroup","isLastInGroup","lastChatBubbleInGroup","recipientLastChatBubbleInGroup","isCenterInGroup","centerChatBubbleInGroup","recipientCenterChatBubbleInGroup","createElement","style","chatBubbleWrapper","className","title","toLocaleString","toLocaleTimeString","hour","minute","hour12","undefined","isSend","width","height","xmlns","viewBox","preserveAspectRatio","background","fill","stroke","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","showRecipientLastSeenMessage","lastSeenByAuthors","length","customLastSeenAvatar","lastSeenByContainer","onMouseEnter","setState","onMouseLeave","map","join","replace","key","author","containerStyle","marginTop","zIndex","Component","styles","position","left","top","lineHeight","fontWeight","color","backgroundColor","borderRadius","textAlign","borderTopRightRadius","pointerEvents","split","part","toUpperCase","substr","container","bottom","right","typingAuthors","overflow","padding","ChatScrollArea","ref","scrollContainer","apiRef","scrollToBottom","behavior","scrollTo","scrollHeight","scrollTop","scrolledToBottom","clientHeight","maxHeight","minHeight","containerStyles","onScroll","e","loadOldMessagesThreshold","onLoadOldMessages","children","fontSize","transition","display","ChatBubble_1","Avatar_1","BubbleGroup","renderGroup","messages","_a","bubblesCentered","showRecipientAvatar","customChatBubble","messageNodes","authors","filter","lastSeenMessageId","id","customAvatar","defaultProps","date","toLocaleDateString","weekday","year","month","day","marginBottom","LoadingMessages","margin","spinnerColor","opacity","isVisible","_1","_2","Avatar","_3","IsTyping","_4","_5","LastSeenAvatar","BubbleGroup_1","_6","ChatFeed","_7","ChatInput","_8","DateRow","_9","marginRight","marginLeft","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","bubbleGroupHeader","IsTyping_1","ChatScrollArea_1","LastSeenAvatar_1","utils_1","DateRow_1","LoadingMessages_1","DefaultChatBubbleFunc","DefaultScrollAreaFunc","bind","isLoadingMessages","onMessageSend","scrollApi","shouldComponentUpdate","nextProps","nextState","shallowDiffers","componentDidMount","getSnapshotBeforeUpdate","prevProps","prevState","wasScrolledToBottom","componentDidUpdate","snapshot","b","renderMessages","groups","groupBy","item","toDateString","jsxKey","keys","forEach","group","messagesGroup","showDateRow","push","customDateRow","concat","index","messageGroup","renderIsTyping","isTyping","chatPanel","customScrollArea","chatMessages","showRecipientAvatarChatMessagesStyle","showIsTyping","showIsTypingChatMessagesStyle","showRecipientLastSeenMessageChatMessagesStyle","customLoadingMessages","showLoadingMessages","hasOldMessages","Promise","resolve","then","__awaiter","sent","flexDirection","flex","img","array","groupingKeyFn","Error","reduce","result","chatInput","inputStyle","border","borderTopWidth","borderTopStyle","borderTopColor","outline","inputStyles","inputPlaceholder","placeholder"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9cd24cf0c4a6b8408e22","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","import * as React from 'react';\r\nimport styles from './styles';\r\nimport Message from '../Message';\r\nimport { Author } from '../Author';\r\nimport { LastSeenAvatarProps } from './../LastSeenAvatar';\r\n\r\nconst defaultBubbleStyles: ChatBubbleStyles = {\r\n  userBubble: {},\r\n  recipientBubble: {},\r\n  chatBubble: {},\r\n  text: {},\r\n  createdOn: {},\r\n  recipientCreatedOn: {},\r\n  loadingSpinnerColor: 'rgba(255, 255, 255, 0.55)',\r\n  isSendIconColor: '#cddc39'\r\n};\r\n\r\nexport interface ChatBubbleStyles {\r\n  userBubble?: React.CSSProperties;\r\n  recipientBubble?: React.CSSProperties;\r\n  chatBubble?: React.CSSProperties;\r\n  text?: React.CSSProperties;\r\n  createdOn?: React.CSSProperties;\r\n  recipientCreatedOn?: React.CSSProperties;\r\n  loadingSpinnerColor?: string;\r\n  isSendIconColor?: string;\r\n}\r\n\r\nexport interface ChatBubbleProps {\r\n  message: Message;\r\n  author?: Author;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  bubblesCentered?: boolean;\r\n  yourAuthorId: number;\r\n  isFirstInGroup?: boolean;\r\n  isLastInGroup?: boolean;\r\n  isCenterInGroup?: boolean;\r\n  lastSeenByAuthors?: Author[];\r\n  showRecipientLastSeenMessage?: boolean;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n}\r\n\r\nexport interface ChatBubbleState {\r\n  mouseOverLastSeenContainer: boolean;\r\n}\r\n\r\nexport default class ChatBubble extends React.Component<ChatBubbleProps, ChatBubbleState> {\r\n  constructor(props: ChatBubbleProps) {\r\n    super(props);\r\n    this.state = {\r\n      mouseOverLastSeenContainer: false\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    if (!this.props.message) {\r\n      return null;\r\n    }\r\n    const { yourAuthorId } = this.props;\r\n    let { bubbleStyles } = this.props;\r\n    bubbleStyles = bubbleStyles || defaultBubbleStyles;\r\n    const { userBubble, chatBubble, text, recipientBubble } = bubbleStyles;\r\n    const youAreAuthor = this.props.message.authorId === yourAuthorId;\r\n\r\n    // message.id 0 is reserved for blue\r\n    const chatBubbleStyles: React.CSSProperties = {\r\n      ...styles.chatBubble,\r\n      ...(youAreAuthor ? {} : styles.recipientChatBubble),\r\n      ...(youAreAuthor ? styles.chatBubbleOrientationNormal : styles.recipientChatBubbleOrientationNormal),\r\n      ...(this.props.isFirstInGroup && (youAreAuthor ? styles.firstChatBubbleInGroup : styles.recipientFirstChatBubbleInGroup)),\r\n      ...(this.props.isLastInGroup && (youAreAuthor ? styles.lastChatBubbleInGroup : styles.recipientLastChatBubbleInGroup)),\r\n      ...(this.props.isCenterInGroup && (youAreAuthor ? styles.centerChatBubbleInGroup : styles.recipientCenterChatBubbleInGroup)),\r\n      ...chatBubble,\r\n      ...(youAreAuthor ? userBubble : recipientBubble),\r\n    };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          ...styles.chatBubbleWrapper,\r\n        }}\r\n      >\r\n        <div style={chatBubbleStyles}>\r\n          <p style={{ ...styles.p, ...text }}>{this.props.message.message}</p>\r\n          {this.props.message.createdOn && (\r\n            <span\r\n              className=\"react-bell-chat__chat-bubble__created-on\"\r\n              style={{\r\n                ...styles.createdOn,\r\n                ...(youAreAuthor ? bubbleStyles.createdOn : bubbleStyles.recipientCreatedOn)\r\n              }}\r\n              title={this.props.message.createdOn.toLocaleString()}\r\n            >{this.props.message.createdOn.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true })}\r\n            </span>\r\n          )}\r\n          {this.props.message.isSend !== undefined && youAreAuthor && (\r\n            <span\r\n              className=\"react-bell-chat__chat-bubble__is-send\"\r\n              style={{\r\n                ...styles.isSend,\r\n              }}\r\n              title={this.props.message.isSend ? 'Send' : 'Sending'}\r\n            >\r\n              {this.props.message.isSend ?\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 10 10\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path\r\n                    fill={bubbleStyles.isSendIconColor ? bubbleStyles.isSendIconColor : defaultBubbleStyles.isSendIconColor}\r\n                    {/* tslint:disable-next-line:max-line-length*/...{}}\r\n                    d=\"M9,1.7L8.6,1.4C8.5,1.3,8.3,1.3,8.2,1.4L3.9,7C3.8,7.1,3.6,7.1,3.5,7c0,0,0,0,0,0L1.7,5.3c-0.1-0.1-0.3-0.1-0.4,0L1,5.6 C0.9,5.7,0.9,5.9,1,6l2.6,2.6c0.1,0.1,0.3,0.1,0.4,0L9,2.1C9.1,2,9.1,1.8,9,1.7z\"\r\n                  />\r\n                </svg>\r\n                :\r\n                <svg\r\n                  width=\"10px\"\r\n                  height=\"10px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 100 100\"\r\n                  preserveAspectRatio=\"xMidYMid\"\r\n                  className=\"lds-eclipse\"\r\n                  style={{ background: 'none' }}\r\n                >\r\n                  <path \r\n                    stroke=\"none\" \r\n                    d=\"M10 50A40 40 0 0 0 90 50A40 45 0 0 1 10 50\" \r\n                    fill={bubbleStyles.loadingSpinnerColor ? bubbleStyles.loadingSpinnerColor : defaultBubbleStyles.loadingSpinnerColor}\r\n                    transform=\"rotate(78 50 52.5)\"\r\n                  >\r\n                    <animateTransform\r\n                      attributeName=\"transform\"\r\n                      type=\"rotate\"\r\n                      calcMode=\"linear\"\r\n                      values=\"0 50 52.5;360 50 52.5\"\r\n                      keyTimes=\"0;1\"\r\n                      dur=\"1s\"\r\n                      begin=\"0s\"\r\n                      repeatCount=\"indefinite\"\r\n                    />\r\n                  </path>\r\n                </svg>\r\n              }\r\n            </span>\r\n          )}\r\n        </div>\r\n        {this.props.showRecipientLastSeenMessage && this.props.lastSeenByAuthors &&\r\n          this.props.lastSeenByAuthors.length > 0 && this.props.customLastSeenAvatar &&\r\n          (\r\n            <div\r\n              className=\"react-bell-chat__chat-bubble__last-seen-by__container\"\r\n              style={styles.lastSeenByContainer}\r\n              onMouseEnter={() => this.setState({ mouseOverLastSeenContainer: true })}\r\n              onMouseLeave={() => this.setState({ mouseOverLastSeenContainer: false })}\r\n              title={'Last seen by ' + this.props.lastSeenByAuthors.map(a => a.name).join(', ').replace(/,(?!.*,)/gmi, ' and')}\r\n            >\r\n              {this.props.lastSeenByAuthors.map((a, i) => (\r\n                <this.props.customLastSeenAvatar\r\n                  key={i}\r\n                  author={a}\r\n                  containerStyle={{\r\n                    ...(i > 0 && !this.state.mouseOverLastSeenContainer ? { marginTop: -12 } : { marginTop: -4 }),\r\n                    zIndex: 100 + i\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nexport interface AvatarProps {\r\n  author: Author;\r\n  containerStyle?: React.CSSProperties;\r\n\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    left: -50,\r\n    top: 0,\r\n    width: 40,\r\n    height: 40,\r\n    lineHeight: '40px',\r\n    fontWeight: 400,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    borderTopRightRadius: 5\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst Avatar: React.SFC<AvatarProps> = props => props.author && (\r\n  <div\r\n    style={{\r\n      ...styles.container,\r\n      ...props.containerStyle\r\n    }}\r\n    title={props.author.name}\r\n    className=\"react-bell-chat__avatar\"\r\n  >\r\n    <span style={{ pointerEvents: 'none' }}>{props.author.name.split(' ').map(part => part[0]).join('').toUpperCase().substr(0, 3)}</span>\r\n  </div>\r\n);\r\n\r\nexport default Avatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/Avatar/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    left: 0,\r\n    right: 0,\r\n    color: 'rgb(204, 204, 204)',\r\n    textAlign: 'center',\r\n  } as React.CSSProperties\r\n};\r\n\r\nexport interface IsTypingProps {\r\n  typingAuthors: Author[];\r\n}\r\n\r\nconst IsTyping = (props: IsTypingProps) => {\r\n  return props.typingAuthors && props.typingAuthors.length > 0 && (\r\n    <div className=\"react-bell-chat__is-typing__container\" style={styles.container}>\r\n      {props.typingAuthors.map(a => a.name).join(', ').replace(/,(?!.*,)/gmi, ' and') + (props.typingAuthors.length === 1 ? ' is ' : ' are ') + 'typing'}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsTyping;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/IsTyping/index.tsx","import * as React from 'react';\r\n\r\nconst styles: { [key: string]: React.CSSProperties } = {\r\n  chatHistory: {\r\n    overflow: 'auto',\r\n    padding: '0 10px',\r\n    // flexDirection: 'column-reverse'\r\n  }\r\n};\r\n\r\nexport interface ChatScrollAreaProps {\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n  children?: JSX.Element | JSX.Element[];\r\n  containerStyles?: React.CSSProperties;\r\n  apiRef?: (api: ChatScrollAreaApi) => void;\r\n  loadOldMessagesThreshold: number;\r\n  onLoadOldMessages: () => Promise<void>;\r\n}\r\n\r\nexport interface ChatScrollAreaApi {\r\n  scrollToBottom: (behavior?: ScrollBehavior) => void;\r\n  scrollTo: (top: number) => void;\r\n  scrolledToBottom: () => boolean;\r\n}\r\n\r\nexport class ChatScrollArea extends React.Component<ChatScrollAreaProps> {\r\n  scrollContainer: HTMLDivElement;\r\n  constructor(props: ChatScrollAreaProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        ref={scrollContainer => {\r\n          this.scrollContainer = scrollContainer;\r\n          this.props.apiRef && this.props.apiRef({\r\n            scrollToBottom: (behavior = 'auto') => scrollContainer && (scrollContainer.scrollTo ?\r\n              scrollContainer.scrollTo({\r\n                top: scrollContainer.scrollHeight,\r\n                behavior\r\n              }) :\r\n              scrollContainer.scrollTop = scrollContainer.scrollHeight),\r\n            scrollTo: top => scrollContainer && (scrollContainer.scrollTo ?\r\n              scrollContainer.scrollTo({\r\n                top: top\r\n              })\r\n              :\r\n              scrollContainer.scrollTop = top),\r\n            scrolledToBottom: () => this.scrollContainer.clientHeight + this.scrollContainer.scrollTop === this.scrollContainer.scrollHeight\r\n          });\r\n        }}\r\n        className=\"react-bell-chat__chat-history\"\r\n        style={{\r\n          ...styles.chatHistory,\r\n          ...(this.props.maxHeight !== undefined ? { maxHeight: this.props.maxHeight } : {}),\r\n          ...(this.props.minHeight !== undefined ? { minHeight: this.props.minHeight } : {}),\r\n          ...this.props.containerStyles\r\n        }}\r\n        onScroll={e => this.scrollContainer && this.scrollContainer.scrollTop <= this.props.loadOldMessagesThreshold && this.props.onLoadOldMessages()}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatScrollArea;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatScrollArea/index.tsx","import * as React from 'react';\r\nimport { Author } from '../Author';\r\n\r\nexport interface LastSeenAvatarProps {\r\n  author: Author;\r\n  containerStyle?: React.CSSProperties;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    width: 20,\r\n    height: 20,\r\n    lineHeight: '20px',\r\n    fontWeight: 400,\r\n    fontSize: 10,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(153, 153, 153)',\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    transition: '0.3s all ease-in-out',\r\n    display: 'block',\r\n    position: 'relative'\r\n  } as React.CSSProperties\r\n};\r\n\r\nconst LastSeenAvatar: React.SFC<LastSeenAvatarProps> = props => props.author && (\r\n  <div\r\n    style={{\r\n      ...styles.container,\r\n      ...props.containerStyle\r\n    }}\r\n    className=\"react-bell-chat__last-seen-avatar\"\r\n  >\r\n    <span style={{pointerEvents: 'none'}}>{props.author.name[0].toUpperCase()}</span>\r\n  </div>\r\n);\r\n\r\nexport default LastSeenAvatar;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LastSeenAvatar/index.tsx","import * as React from 'react';\r\nimport DefaultChatBubble, { ChatBubbleProps, ChatBubbleStyles } from '../ChatBubble';\r\nimport styles from './styles';\r\nimport { Message } from '../';\r\nimport { Author } from '../Author';\r\nimport Avatar, { AvatarProps } from '../Avatar';\r\nimport { LastSeenAvatarProps } from '../LastSeenAvatar';\r\n\r\nexport interface BubbleGroupProps {\r\n  yourAuthorId?: number;\r\n  messages: Message[];\r\n  author: Author;\r\n  authors?: Author[];\r\n  showRecipientAvatar?: boolean;\r\n  bubblesCentered?: boolean;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  showRecipientLastSeenMessage?: boolean;\r\n};\r\n\r\nexport default class BubbleGroup extends React.Component<BubbleGroupProps> {\r\n  public static defaultProps: BubbleGroupProps = {\r\n    messages: [],\r\n    author: undefined,\r\n    customAvatar: Avatar,\r\n    showRecipientLastSeenMessage: false\r\n  }\r\n\r\n  constructor(props: BubbleGroupProps) {\r\n    super(props);\r\n  }\r\n\r\n  renderGroup(messages: Message[], author: Author) {\r\n    const {\r\n      bubblesCentered,\r\n      bubbleStyles,\r\n      showRecipientAvatar,\r\n      customChatBubble,\r\n    } = this.props;\r\n    const ChatBubble = customChatBubble || DefaultChatBubble;\r\n\r\n    const messageNodes = messages.map((message, i) => (\r\n      <ChatBubble\r\n        key={i}\r\n        yourAuthorId={this.props.yourAuthorId}\r\n        author={author}\r\n        message={message}\r\n        bubblesCentered={bubblesCentered}\r\n        bubbleStyles={bubbleStyles}\r\n        isFirstInGroup={i === 0}\r\n        isLastInGroup={i === messages.length - 1 && messages.length > 1}\r\n        isCenterInGroup={i < messages.length - 1 && messages.length > 1}\r\n        lastSeenByAuthors={this.props.authors && this.props.authors.filter(a => a.lastSeenMessageId !== undefined && a.lastSeenMessageId === message.id)}\r\n        showRecipientLastSeenMessage={this.props.showRecipientLastSeenMessage}\r\n        customLastSeenAvatar={this.props.customLastSeenAvatar}\r\n      />\r\n    ));\r\n\r\n    const youAreAuthor = author && this.props.yourAuthorId === author.id;\r\n\r\n    return (\r\n      <div style={styles.chatBubbleWrapper}>\r\n        {!youAreAuthor && showRecipientAvatar && author && this.props.customAvatar &&\r\n          this.props.customAvatar({ author: this.props.author })\r\n        }\r\n        {messageNodes}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { messages, author } = this.props;\r\n    return this.renderGroup(messages, author);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/index.tsx","import * as React from 'react';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n    color: 'rgba(0, 0, 0, 0.55)'\r\n  } as React.CSSProperties,\r\n};\r\n\r\nexport interface DateRowProps {\r\n  date: Date;\r\n  containerStyles?: React.CSSProperties;\r\n}\r\n\r\nconst DateRow = (props: DateRowProps) => {\r\n  return props.date && (\r\n    <div\r\n      className=\"react-bell-chat__date-row\"\r\n      style={{\r\n        ...styles.container,\r\n        ...props.containerStyles\r\n      }}\r\n      title={props.date.toLocaleDateString([], { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}\r\n    >\r\n      {props.date.toLocaleDateString()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRow;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/DateRow/index.tsx","import * as React from 'react';\r\n\r\nconst styles = {\r\n  containerStyles: {\r\n    display: 'flex',\r\n    marginBottom: 10\r\n  },\r\n};\r\n\r\nexport interface LoadingMessagesProps {\r\n  containerStyles?: object;\r\n  spinnerColor?: string;\r\n  isVisible: boolean;\r\n}\r\n\r\nconst LoadingMessages: React.SFC<LoadingMessagesProps> = (props: LoadingMessagesProps) => {\r\n  const { containerStyles } = props;\r\n  return (\r\n    <div className=\"react-bell-chat__loading-messages\" style={{ ...styles.containerStyles, ...containerStyles }}>\r\n      <svg\r\n        width=\"40px\"\r\n        height=\"40px\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 100 100\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n        style={{ \r\n          background: 'none',\r\n          margin: 'auto', \r\n          fill: props.spinnerColor, opacity: props.isVisible ? 1 : 0,\r\n          transition: '0.3s all ease-in-out'\r\n        }}\r\n      >\r\n        <title>Loading messages</title>\r\n        <path\r\n          stroke=\"none\"\r\n          d=\"M10 50A40 40 0 0 0 90 50A40 46 0 0 1 10 50\"\r\n          transform=\"rotate(42 50 53)\"\r\n        >\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            calcMode=\"linear\"\r\n            values=\"0 50 53;360 50 53\"\r\n            keyTimes=\"0;1\"\r\n            dur=\"1s\"\r\n            begin=\"0s\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </path>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\nLoadingMessages.defaultProps = {\r\n  spinnerColor: 'rgb(0, 132, 255)'\r\n};\r\nexport default LoadingMessages;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LoadingMessages/index.tsx","import ChatBubble, { ChatBubbleProps } from './ChatBubble/';\r\nimport Avatar, { AvatarProps } from './Avatar/';\r\nimport IsTyping, { IsTypingProps } from './IsTyping/';\r\nimport ChatScrollArea, { ChatScrollAreaProps, ChatScrollAreaApi } from './ChatScrollArea/';\r\nimport LastSeenAvatar, { LastSeenAvatarProps } from './LastSeenAvatar/';\r\nimport BubbleGroup, { BubbleGroupProps } from './BubbleGroup';\r\nimport ChatFeed, { ChatFeedProps, ChatFeedApi } from './ChatFeed/';\r\nimport ChatInput, { ChatInputProps } from './ChatInput/';\r\nimport DateRow, { DateRowProps } from './DateRow/';\r\nimport LoadingMessages, { LoadingMessagesProps } from './LoadingMessages/';\r\nimport Message from './Message/';\r\nimport Author from './Author/';\r\n\r\nexport {\r\n  ChatFeed,\r\n  ChatFeedProps,\r\n  ChatFeedApi,\r\n  ChatInput,\r\n  ChatInputProps,\r\n  LoadingMessages,\r\n  LoadingMessagesProps,\r\n  DateRow,\r\n  DateRowProps,\r\n  ChatBubble,\r\n  ChatBubbleProps,\r\n  BubbleGroup,\r\n  BubbleGroupProps,\r\n  Message,\r\n  Author,\r\n  Avatar,\r\n  AvatarProps,\r\n  LastSeenAvatar,\r\n  LastSeenAvatarProps,\r\n  IsTyping,\r\n  IsTypingProps,\r\n  ChatScrollArea,\r\n  ChatScrollAreaProps,\r\n  ChatScrollAreaApi\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.ts","import * as React from 'react';\r\n\r\nconst styles = {\r\n  chatBubbleWrapper: {\r\n    position: 'relative',\r\n    marginBottom: 2,\r\n    display: 'flex'\r\n  } as React.CSSProperties,\r\n  chatBubble: {\r\n    position: 'relative',\r\n    backgroundColor: '#0084FF',\r\n    borderRadius: 7,\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    maxWidth: '80%',\r\n    paddingTop: 8,\r\n    paddingBottom: 10,\r\n    paddingLeft: 14,\r\n    paddingRight: 14,\r\n    // boxShadow: 'rgba(0, 0, 0, 0.3) 2px 2px 2px'\r\n  } as React.CSSProperties,\r\n  chatBubbleOrientationNormal: {\r\n    marginRight: 0,\r\n  } as React.CSSProperties,\r\n  recipientChatBubble: {\r\n    backgroundColor: '#ccc',\r\n  } as React.CSSProperties,\r\n  recipientChatBubbleOrientationNormal: {\r\n    marginLeft: 0,\r\n  } as React.CSSProperties,\r\n  p: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: 300,\r\n    margin: 0,\r\n    marginRight: 30\r\n  } as React.CSSProperties,\r\n  firstChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientFirstChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  lastChatBubbleInGroup: {\r\n    borderTopRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientLastChatBubbleInGroup: {\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  centerChatBubbleInGroup: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  } as React.CSSProperties,\r\n  recipientCenterChatBubbleInGroup: {\r\n    borderBottomLeftRadius: 0,\r\n    borderTopLeftRadius: 0\r\n  } as React.CSSProperties,\r\n  createdOn: {\r\n    position: 'absolute',\r\n    right: 14,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n    color: 'rgba(255, 255, 255, 0.55)'\r\n  } as React.CSSProperties,\r\n  isSend: {\r\n    position: 'absolute',\r\n    right: 2,\r\n    bottom: 2,\r\n    fontSize: 9,\r\n  } as React.CSSProperties,\r\n  lastSeenByContainer: {\r\n    position: 'absolute',\r\n    right: -30,\r\n    top: 0,\r\n    width: 20,\r\n    height: '100%',\r\n  } as React.CSSProperties\r\n};\r\nexport default styles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatBubble/styles.ts","import * as React from 'react';\r\n\r\nexport interface BubbleGroupStyles{\r\n  chatBubbleWrapper: React.CSSProperties;\r\n  bubbleGroupHeader: React.CSSProperties;\r\n}\r\n\r\nexport default {\r\n  chatBubbleWrapper: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    position: 'relative',\r\n  },\r\n  bubbleGroupHeader: {\r\n    margin: 0,\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n    color: '#999',\r\n  },\r\n  \r\n} as BubbleGroupStyles;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/BubbleGroup/styles.ts","// Copyright 2017 Brandon Mowat\r\n// Written, developed, and designed by Brandon Mowat for the purpose of helping\r\n// other developers make chat interfaces.\r\n\r\nimport * as React from 'react';\r\nimport BubbleGroup from '../BubbleGroup';\r\nimport DefaultChatBubble, { ChatBubbleProps } from '../ChatBubble';\r\nimport Message from '../Message';\r\nimport styles from './styles';\r\nimport { Author } from '../Author';\r\nimport { ChatBubbleStyles } from '../ChatBubble/';\r\nimport Avatar, { AvatarProps } from '../Avatar';\r\nimport IsTyping from '../IsTyping';\r\nimport ChatScrollArea, { ChatScrollAreaProps, ChatScrollAreaApi } from '../ChatScrollArea';\r\nimport LastSeenAvatar, { LastSeenAvatarProps } from '../LastSeenAvatar';\r\nimport { groupBy } from '../utils/utils';\r\nimport DateRow, { DateRowProps } from '../DateRow';\r\nimport LoadingMessages, { LoadingMessagesProps } from '../LoadingMessages';\r\n\r\n// Model for ChatFeed props.\r\n\r\nexport interface ChatFeedProps {\r\n  // Structural props\r\n  className?: string;\r\n\r\n  // Functional props\r\n  messages: Message[];\r\n  authors: Author[];\r\n  yourAuthorId: number;\r\n  hasOldMessages?: boolean;\r\n  loadOldMessagesThreshold?: number;\r\n\r\n  // Visual props\r\n  bubblesCentered?: boolean;\r\n  bubbleStyles?: ChatBubbleStyles;\r\n  maxHeight?: string | number;\r\n  minHeight?: string | number;\r\n\r\n  // Switches\r\n  showDateRow?: boolean;\r\n  showRecipientAvatar?: boolean;\r\n  showRecipientLastSeenMessage?: boolean;\r\n  showIsTyping?: boolean;\r\n  showLoadingMessages?: boolean;\r\n\r\n  // Extra container styles for custom components\r\n  showRecipientAvatarChatMessagesStyle?: React.CSSProperties;\r\n  showRecipientLastSeenMessageChatMessagesStyle?: React.CSSProperties;\r\n  showIsTypingChatMessagesStyle?: React.CSSProperties;\r\n\r\n  // Custom components\r\n  customLoadingMessages?: (props: LoadingMessagesProps) => JSX.Element;\r\n  customChatBubble?: (props: ChatBubbleProps) => JSX.Element;\r\n  customAvatar?: (props: AvatarProps) => JSX.Element;\r\n  customScrollArea?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customIsTyping?: (props: ChatScrollAreaProps) => JSX.Element;\r\n  customLastSeenAvatar?: (props: LastSeenAvatarProps) => JSX.Element;\r\n  customDateRow?: (props: DateRowProps) => JSX.Element;\r\n\r\n  // Callbacks\r\n  onLoadOldMessages?: () => Promise<void>;\r\n\r\n  ref?: (api: ChatFeedApi) => void;\r\n}\r\n\r\nexport interface ChatFeedState {\r\n  isLoadingMessages: boolean;\r\n}\r\n\r\nexport interface ChatFeedApi {\r\n  onMessageSend: () => void;\r\n  scrollApi: ChatScrollAreaApi;\r\n}\r\n\r\nconst DefaultChatBubbleFunc = props => <DefaultChatBubble {...props} />;\r\nconst DefaultScrollAreaFunc = props => <ChatScrollArea {...props} />;\r\n\r\nexport interface ChatFeedSnapshot {\r\n  wasScrolledToBottom: boolean;\r\n}\r\n\r\n// React component to render a complete chat feed\r\nexport default class ChatFeed extends React.Component<ChatFeedProps, ChatFeedState> implements ChatFeedApi {\r\n  public static defaultProps: ChatFeedProps = {\r\n    messages: [],\r\n    authors: [],\r\n    customChatBubble: DefaultChatBubbleFunc,\r\n    customAvatar: Avatar,\r\n    customScrollArea: DefaultScrollAreaFunc,\r\n    customLastSeenAvatar: LastSeenAvatar,\r\n    customDateRow: DateRow,\r\n    customLoadingMessages: LoadingMessages,\r\n    yourAuthorId: 0,\r\n    loadOldMessagesThreshold: 50\r\n  };\r\n\r\n  public scrollApi: ChatScrollAreaApi;\r\n\r\n  constructor(props: ChatFeedProps) {\r\n    super(props);\r\n    this.onLoadOldMessages = this.onLoadOldMessages.bind(this);\r\n    this.state = {\r\n      isLoadingMessages: false\r\n    };\r\n  }\r\n\r\n  public onMessageSend() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: ChatFeedProps, nextState: ChatFeedState) {\r\n    return (\r\n      this.shallowDiffers(this.props, nextProps) ||\r\n      this.shallowDiffers(this.state, nextState)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollApi && this.scrollApi.scrollToBottom();\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps: ChatFeedProps, prevState: ChatFeedState) {\r\n    const wasScrolledToBottom = this.scrollApi && this.scrollApi.scrolledToBottom();\r\n    if (wasScrolledToBottom) {\r\n      return {\r\n        wasScrolledToBottom\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ChatFeedProps, prevState: ChatFeedState, snapshot: ChatFeedSnapshot) {\r\n    if (this.props.messages.length !== prevProps.messages.length && snapshot && snapshot.wasScrolledToBottom) {\r\n      this.scrollApi.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  shallowDiffers(a: object, b: object) {\r\n    for (let i in a) {\r\n      if (!(i in b)) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in b) {\r\n      if (a[i] !== b[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determines what type of message/messages to render.\r\n   */\r\n  renderMessages(messages: Message[]) {\r\n    const { bubbleStyles, customChatBubble, showRecipientAvatar } = this.props;\r\n\r\n    // First group by days\r\n    const groups = groupBy(messages, item => item.createdOn && item.createdOn.toDateString());\r\n    let messageNodes: JSX.Element[] = [];\r\n    let jsxKey = 0;\r\n    Object.keys(groups).forEach(key => {\r\n      let group = [];\r\n      const messagesGroup = groups[key];\r\n      if (messagesGroup[0] && messagesGroup[0].createdOn && this.props.showDateRow) {\r\n        messageNodes.push(<this.props.customDateRow key={key} date={messagesGroup[0].createdOn} />);\r\n      }\r\n      messageNodes = messageNodes.concat(messagesGroup.map((message, index) => {\r\n        group.push(message);\r\n        // Find diff in message type or no more messages\r\n        if (!messagesGroup[index + 1] || messagesGroup[index + 1].authorId !== message.authorId) {\r\n          const messageGroup = group;\r\n          const author = this.props.authors && this.props.authors.filter(a => a.id === message.authorId)[0];\r\n          group = [];\r\n          jsxKey++;\r\n          return (\r\n            <BubbleGroup\r\n              key={jsxKey}\r\n              yourAuthorId={this.props.yourAuthorId}\r\n              messages={messageGroup}\r\n              author={author}\r\n              authors={this.props.authors}\r\n              showRecipientAvatar={showRecipientAvatar}\r\n              customChatBubble={customChatBubble}\r\n              bubbleStyles={bubbleStyles}\r\n              showRecipientLastSeenMessage={this.props.showRecipientLastSeenMessage}\r\n              customAvatar={this.props.customAvatar}\r\n              customLastSeenAvatar={this.props.customLastSeenAvatar}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      }));\r\n    });\r\n    return messageNodes;\r\n  }\r\n\r\n  renderIsTyping() {\r\n    const typingAuthors = this.props.authors && this.props.authors.filter(a => a.isTyping && a.id !== this.props.yourAuthorId);\r\n    if (!typingAuthors || typingAuthors.length === 0) {\r\n      return null;\r\n    }\r\n    return <IsTyping typingAuthors={typingAuthors} />;\r\n  }\r\n\r\n  /**\r\n   * render : renders our chat feed\r\n   */\r\n  render() {\r\n    return (\r\n      <div\r\n        id={'react-bell-chat__chat-panel ' + (this.props.className ? this.props.className : '')}\r\n        style={{\r\n          ...styles.chatPanel\r\n        }}\r\n      >\r\n        <this.props.customScrollArea\r\n          minHeight={this.props.minHeight}\r\n          maxHeight={this.props.maxHeight}\r\n          apiRef={e => this.scrollApi = e}\r\n          loadOldMessagesThreshold={this.props.loadOldMessagesThreshold}\r\n          onLoadOldMessages={this.onLoadOldMessages}\r\n        >\r\n          <div\r\n            style={{\r\n              ...styles.chatMessages,\r\n              ...(this.props.showRecipientAvatar && styles.showRecipientAvatarChatMessagesStyle),\r\n              ...(this.props.showRecipientAvatar && this.props.showRecipientAvatarChatMessagesStyle),\r\n              ...(this.props.showIsTyping && styles.showIsTypingChatMessagesStyle),\r\n              ...(this.props.showIsTyping && this.props.showIsTypingChatMessagesStyle),\r\n              ...(this.props.showRecipientLastSeenMessage && styles.showRecipientLastSeenMessageChatMessagesStyle),\r\n              ...(this.props.showRecipientLastSeenMessage && this.props.showRecipientLastSeenMessageChatMessagesStyle),\r\n            }}\r\n            className=\"react-bell-chat__chat-messages\"\r\n          >\r\n            {<this.props.customLoadingMessages isVisible={this.props.showLoadingMessages || this.state.isLoadingMessages} />}\r\n            {this.renderMessages(this.props.messages)}\r\n            {this.props.showIsTyping && this.renderIsTyping()}\r\n          </div>\r\n        </this.props.customScrollArea>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onLoadOldMessages() {\r\n    if (!this.state.isLoadingMessages && this.props.hasOldMessages) {\r\n      return new Promise<void>(resolve => {\r\n        this.setState({\r\n          isLoadingMessages: true,\r\n        }, () => resolve());\r\n      }).then(async () => {\r\n        if (this.props.onLoadOldMessages) {\r\n          await this.props.onLoadOldMessages();\r\n        }\r\n      }).then(async () => {\r\n        await new Promise<void>(resolve => {\r\n          this.setState({\r\n            isLoadingMessages: false,\r\n          }, () => {\r\n            this.scrollApi.scrollTo(this.props.loadOldMessagesThreshold + 1);\r\n            resolve();\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/index.tsx","import * as React from 'react';\r\n\r\nexport default {\r\n  chatPanel: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n    position: 'relative'\r\n  } as React.CSSProperties,\r\n  showRecipientAvatarChatMessagesStyle: {\r\n    paddingLeft: 50\r\n  } as React.CSSProperties,\r\n  showIsTypingChatMessagesStyle: {\r\n    paddingBottom: 24,\r\n    position: 'relative'\r\n  } as React.CSSProperties,\r\n  showRecipientLastSeenMessageChatMessagesStyle: {\r\n    paddingRight: 30,\r\n  } as React.CSSProperties,\r\n  chatBubbleWrapper: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    overflow: 'auto',\r\n    position: 'relative',\r\n  } as React.CSSProperties,\r\n  img: {\r\n    borderRadius: 100,\r\n    bottom: 0,\r\n    left: 0,\r\n    position: 'absolute',\r\n    width: 36,\r\n    zIndex: 100,\r\n  } as React.CSSProperties,\r\n  chatMessages: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  } as React.CSSProperties\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatFeed/styles.ts","const groupBy = <T>(array: Array<T>, groupingKeyFn: (item: T) => string): { [key: string]: Array<T> } => {\r\n  if (typeof groupingKeyFn !== 'function') {\r\n    throw new Error(\"groupBy take a function as only parameter\");\r\n  }\r\n  return array.reduce((result, item) => {\r\n    let key = groupingKeyFn(item);\r\n    if (!result[key])\r\n      result[key] = [];\r\n    result[key].push(item);\r\n    return result;\r\n  }, {});\r\n};\r\nexport { groupBy };\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.ts","import * as React from 'react';\r\n\r\nconst styles = {\r\n  chatInput: {\r\n    flex: 1,\r\n  },\r\n  inputStyle: {\r\n    border: 'none',\r\n    borderTopWidth: '1',\r\n    borderTopStyle: 'solid',\r\n    borderTopColor: '#ddd',\r\n    fontSize: '16',\r\n    outline: 'none',\r\n    padding: '30',\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport interface ChatInputProps {\r\n  inputStyles?: object;\r\n  inputPlaceholder?: string;\r\n}\r\n\r\nconst ChatInput = (props: ChatInputProps) => {\r\n  const { inputStyles, inputPlaceholder } = props;\r\n  return (\r\n    <div className=\"react-bell-chat__chat-input\" style={styles.chatInput}>\r\n      <input type=\"text\" style={inputStyles || styles.inputStyle} placeholder={inputPlaceholder} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ChatInput/index.tsx"],"sourceRoot":""}